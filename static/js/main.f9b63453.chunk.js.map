{"version":3,"sources":["../node_modules/jspdf/dist sync","Components/TopBar/TopBar.jsx","api-handler/index.js","Components/Tables/Tables.jsx","Components/News/News.jsx","Components/About/About.jsx","Components/Cards/Cards.jsx","Components/Charts/Charts.jsx","App.js","Components/Tables/TopTenTables.jsx","Components/Tables/TablesYtd.jsx","Components/Tables/TopTenYtd.jsx","Components/Globe/Globe.jsx","Route.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","useStyles","makeStyles","root","backgroundColor","padding","margin","root1","textAlign","marginTop","title","flexGrow","paddingLeft","TopBar","styles","AppBar","position","color","elevation","className","Toolbar","Typography","variant","role","aria-label","Button","size","href","current","onClick","window","location","reload","Paper","target","fetchData","a","axios","get","response","data","console","log","fetchWorldDailyData","reverse","fetchTopNews","dataSet","items","fetchWorldTdyYtd","urlTodayUnsorted","urlYtd","urlYtdUnsorted","todayResponse","ytdResponse","todayRes","ytdRes","modifiedData","today","slice","todayAll","yesterday","yesterdayAll","fetchLocationData","width","container","maxHeight","card","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Tables","useState","tdyData","setTdyData","useEffect","fetchedAPI","fetchAPI","map","item","country","LinearProgress","Grid","spacing","align","more","component","Card","CardContent","icons","columns","field","hash","options","sorting","boxShadow","marginLeft","borderColor","News","setData","newsData","mapNews","index","gutterBotton","countries","countryCode","name","gutterBottom","content","Link","url","Date","publishedAt","toLocaleString","About","borderRadius","marginBottom","infected","borderBottom","active","recovered","deaths","tables","alignItems","Cards","totalInfected","parseInt","totalConfirmed","totalRecovered","totalDeaths","totalActive","totalActiveCases","ytdData","setYtdData","label","topDailyBar","labels","datasets","todayCases","todayDeaths","legend","display","scales","xAxes","stacked","yAxes","topYtdBar","justify","xs","md","cx","start","end","duration","separator","style","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","key","TableBody","row","hover","tabIndex","value","justifyItems","card1","Charts","worldDailyData","setWorldData","total","worldBreakdown","worldLineGraph","length","last_update","toDateString","total_cases","fill","total_deaths","total_recovered","maintainAspectRatio","responsive","type","ticks","autoSkip","maxTicksLimit","lg","direction","toFixed","App","state","dataDynamic","date","fetchedData","this","setState","React","Component","TopTenTables","TablesYtd","TopTenYtd","Globe","locData","setLocData","setLocation","Map","center","zoom","TileLayer","attribution","CircleMarker","countryInfo","_id","lat","long","radius","Popup","onClose","cases","critical","Routes","exact","path","ReactDOM","render","basename","Route","document","getElementById"],"mappings":"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","file":"static/js/main.f9b63453.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 374;","import React from 'react';\r\nimport { AppBar, Toolbar, Typography, Button, Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: 'rgb(92, 219, 149, 0.2)',\r\n    padding: '0% !important',\r\n    margin: '0% !important'\r\n  },\r\n  root1: {\r\n    padding: '1%',\r\n    textAlign: 'justify',\r\n    marginTop: '0% !important',\r\n    backgroundColor: 'rgb(92, 219, 149, 0.2)'\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: 'start',\r\n    paddingLeft: 'inherit'\r\n  }\r\n})\r\n\r\nconst TopBar = () => {\r\n  const styles = useStyles();\r\n\r\n  const reloadPage = () => window.location.reload(false)\r\n\r\n  return (\r\n    <>\r\n      <AppBar position='static' color='transparent' elevation={0} className={styles.root}>\r\n        <Toolbar>\r\n          <Typography variant='h6' className={styles.title}>\r\n            <span role=\"img\" aria-label=\"grinning face\" id=\"rise trend\">𝗖𝗢𝗩𝗜𝗗🦠𝗧𝗥𝗔𝗖𝗞𝗘𝗥</span>\r\n          </Typography>\r\n\r\n          <Button size='large' href=' #/' color='secondary' className={styles.current}>\r\n            Home\r\n              </Button>\r\n          <Button size='large' href=' #/globe' color='secondary' className={styles.current}>\r\n            Globe\r\n              </Button>\r\n          {/* <Button size='large' href=' #/singapore' color='secondary' className={styles.current}>\r\n            Singapore\r\n            </Button> */}\r\n          <Button size='large' href=' #/summary' color='secondary' className={styles.current}>\r\n            Summary\r\n              </Button>\r\n\r\n          <Button size='large' href=' #/news' color='secondary' className={styles.current}>\r\n            News\r\n              </Button>\r\n\r\n          <Button size='large' href=' #/about' color='secondary' className={styles.current}>\r\n            About\r\n              </Button>\r\n\r\n          <Button size='large' onClick={() => reloadPage()} color='secondary' className={styles.current}>\r\n            <span role=\"img\" aria-label=\"grinning face\" id=\"rise trend\">🔄</span>\r\n          </Button>\r\n\r\n        </Toolbar >\r\n      </AppBar >\r\n      <Paper elevation={0} className={styles.root1}>\r\n        <Typography variant='button'>\r\n          For the latest travel advisories visit\r\n          <Button color='secondary' href='https://www.who.int/emergencies/diseases/novel-coronavirus-2019/travel-advice' target=\"_blank\">World Health Organisation</Button>\r\n        </Typography>\r\n      </Paper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TopBar;","import axios from 'axios';\r\n\r\nexport const fetchData = async () => {\r\n  try {\r\n    const url = 'http://api.coronatracker.com/v3/stats/worldometer/global';\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async (country) => {\r\n  const url = 'https://api.covid19api.com/total/country';\r\n  var variableUrl = url;\r\n  if (country) {\r\n    variableUrl = `${url}/${country}`;\r\n  }\r\n  if (!country) {\r\n    variableUrl = `${url}/singapore`;\r\n  }\r\n  try {\r\n    const response = await axios.get(variableUrl);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchWorldDailyData = async () => {\r\n  try {\r\n    const url = 'https://covid19-api.org/api/timeline';\r\n    const response = await axios.get(url);\r\n    return response.data.reverse();\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const countries = async () => {\r\n  try {\r\n    const url = 'https://covid19.mathdro.id/api/countries';\r\n    const response = await axios.get(url);\r\n    return response.data.countries;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchCurrentData = async () => {\r\n  try {\r\n    const url = 'https://covid19.mathdro.id/api/countries/Singapore';\r\n    const response = await axios.get(url);\r\n    const infected = response.data.confirmed.value;\r\n    const recovered = response.data.recovered.value;\r\n    const deaths = response.data.deaths.value;\r\n    const active = infected - deaths - recovered;\r\n    const modifiedData = { infected, recovered, active, deaths };\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchSummaryData = async () => {\r\n  try {\r\n    const url = 'https://api.covid19api.com/summary';\r\n    const response = await axios.get(url);\r\n    const dataSet = response.data;\r\n    const countriesData = dataSet.Countries;\r\n    return countriesData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchTopNews = async () => {\r\n  try {\r\n    const url = 'https://api.coronatracker.com/news/trending';\r\n    const response = await axios.get(url);\r\n    const dataSet = response.data.items;\r\n    return dataSet;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchTopDaily = async () => {\r\n  try {\r\n    const url = 'https://api.coronatracker.com/v3/analytics/dailyNewStats?limit=10';\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchSGData = async () => {\r\n  try {\r\n    const url = 'https://api.apify.com/v2/key-value-stores/yaPbKe9e5Et61bl7W/records/LATEST?disableRedirect=true';\r\n    const response = await axios.get(url);\r\n    const hospitalizedData = {\r\n      community: response.data.inCommunityFacilites,\r\n      stable: response.data.stableHospitalized,\r\n      critical: response.data.criticalHospitalized\r\n    }\r\n    return hospitalizedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchWorldTdyYtd = async () => {\r\n  try {\r\n    const urlToday = 'https://disease.sh/v3/covid-19/countries?sort=todayCases';\r\n    const urlTodayUnsorted = 'https://disease.sh/v3/covid-19/countries';\r\n    const urlYtd = 'https://disease.sh/v3/covid-19/countries?yesterday=true&sort=todayCases';\r\n    const urlYtdUnsorted = 'https://disease.sh/v3/covid-19/countries?yesterday=true';\r\n    const todayResponse = await axios.get(urlToday);\r\n    const ytdResponse = await axios.get(urlYtd);\r\n    const todayRes = await axios.get(urlTodayUnsorted);\r\n    const ytdRes = await axios.get(urlYtdUnsorted);\r\n    const modifiedData = {\r\n      today: todayResponse.data.slice(0, 10),\r\n      todayAll: todayRes.data,\r\n      yesterday: ytdResponse.data.slice(0, 10),\r\n      yesterdayAll: ytdRes.data\r\n    }\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchLocationData = async () => {\r\n  try {\r\n    const url = 'https://corona.lmao.ninja/v2/countries?sort=cases';\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}","import React, { useState, useEffect, forwardRef } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Paper,\r\n  LinearProgress,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport MaterialTable from 'material-table';\r\n\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport { fetchWorldTdyYtd } from \"../../api-handler/index\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 530,\r\n    backgroundColor: 'rgb(92, 219, 149, 0.1)'\r\n  },\r\n  card: {\r\n    backgroundColor: 'rgb(92, 219, 149, 0.1)'\r\n  },\r\n});\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst Tables = () => {\r\n  const styles = useStyles();\r\n  const [tdyData, setTdyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const fetchedAPI = await fetchWorldTdyYtd();\r\n      const { todayAll } = fetchedAPI;\r\n      setTdyData(todayAll);\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const columns = [\r\n    { field: \"country\", title: \"Country\" },\r\n    { field: \"cases\", title: \"Total Cases\" },\r\n    { field: \"todayCases\", title: \"New Cases\" },\r\n    { field: \"deaths\", title: \"Total Deaths\" },\r\n    { field: \"recovered\", title: \"Total Recovered\" },\r\n    { field: \"todayRecovered\", title: \"New Recovered\" },\r\n    { field: \"active\", title: \"Active\" },\r\n    { field: \"casesPerOneMillion\", title: \"Cases per million\" },\r\n    { field: \"deathsPerOneMillion\", title: \"Deaths per million\" },\r\n    { field: \"population\", title: \"Total Population\" },\r\n    { field: \"continent\", title: \"Continent\" }\r\n  ];\r\n\r\n  if (!tdyData.map(item => item.country)) {\r\n    return (\r\n      <LinearProgress />\r\n    )\r\n  }\r\n\r\n  var dataSet = tdyData;\r\n  // const mapData = (dataSet) => {\r\n  //   dataSet.map(item => {\r\n  //     item.country = item.country.toLocaleString()\r\n  //     item.cases = item.cases.toLocaleString()\r\n  //     item.todayCases = item.todayCases.toLocaleString()\r\n  //     item.deaths = item.deaths.toLocaleString()\r\n  //     item.recovered = item.recovered.toLocaleString()\r\n  //     item.todayRecovered = item.todayRecovered.toLocaleString()\r\n  //     item.active = item.active.toLocaleString()\r\n  //     item.casesPerOneMillion = item.casesPerOneMillion.toLocaleString()\r\n  //     item.deathsPerOneMillion = item.deathsPerOneMillion.toLocaleString()\r\n  //     item.population = item.population.toLocaleString()\r\n  //     item.continent = item.continent.toLocaleString()\r\n  //     return item;\r\n  //   })\r\n  // }\r\n  // mapData(dataSet);\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <Paper className={styles.root}>\r\n        <Grid spacing={3} align=\"center\">\r\n          <Grid item>\r\n            <Button color='secondary' className={styles.more} href='#/summary'>Today</Button>\r\n            <Button color='secondary' className={styles.more} href='#/ytdsummary'>Yesterday</Button>\r\n            <Button color='secondary' className={styles.more} href='#/'>Home</Button>\r\n          </Grid>\r\n          <Grid item component={Card} className={styles.card}>\r\n            <CardContent>\r\n              <MaterialTable\r\n                icons={tableIcons}\r\n                columns={columns}\r\n                title={window.location.hash === \"#/summary\" ? \"Today's Summary\" : \"Yesterday's Summary\"}\r\n                data={dataSet}\r\n                options={{\r\n                  sorting: true,\r\n                }}\r\n              />\r\n            </CardContent>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tables;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Grid, CardContent, Typography, Link, LinearProgress } from '@material-ui/core';\r\nimport { countries } from 'country-data';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TopBar from '../TopBar/TopBar';\r\nimport { fetchTopNews } from '../../api-handler/index';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    textAlign: 'justify',\r\n    boxShadow: 'none !important',\r\n    width: '100% !important',\r\n    marginLeft: '10%'\r\n  },\r\n  card: {\r\n    margin: '2% !important',\r\n    borderColor: 'transparent',\r\n    textAlign: 'justify',\r\n    // width: '80%',\r\n    // marginLeft: '10% !important',\r\n  },\r\n})\r\n\r\nconst News = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const styles = useStyles();\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const newsData = await fetchTopNews();\r\n      setData(newsData);\r\n    }\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  if (!data) {\r\n    return (\r\n      <LinearProgress />\r\n    )\r\n  }\r\n\r\n  const mapNews = data.map((items, index) => {\r\n    return (\r\n      <>\r\n        <CardContent className={styles.card}>\r\n          <Typography variant='h6' color='textPrimary' gutterBotton>{countries[items.countryCode].name}</Typography>\r\n          <Typography variant='h6' color='primary' gutterBottom>{items.title}</Typography>\r\n          <Typography variant='body2'>{items.content}</Typography>\r\n          <Typography variant='caption'>\r\n            Source:&nbsp;\r\n            <Link href={items.url} target=\"_blank\">{items.url}</Link>\r\n          </Typography>\r\n          <Typography variant='body2'>Published:&nbsp;{new Date(items.publishedAt).toLocaleString()}</Typography>\r\n        </CardContent>\r\n      </>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <Grid elevation={0} container spacing={0}>\r\n        <Grid item>\r\n          {mapNews}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport { CardContent, Typography, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport TopBar from '../TopBar/TopBar';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    textAlign: 'center',\r\n  },\r\n  card: {\r\n    margin: '2% !important',\r\n    borderColor: 'transparent',\r\n    textAlign: 'justify',\r\n  },\r\n})\r\n\r\nconst About = () => {\r\n  const styles = useStyles();\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <CardContent elevation={1} className={styles.card}>\r\n        <Typography align='inherit' variant='h5'>We get our data from</Typography>\r\n        <Button href='https://api.covid19api.com' target=\"_blank\" color='secondary'>covid19api</Button>\r\n        <Button href='https://covid19-api.org' target=\"_blank\" color='secondary'>covid19-api</Button>\r\n        <Button href='https://covid19.mathdro.id' target=\"_blank\" color='secondary'>covid19.mathdro.id</Button>\r\n        <Button href='https://api.coronatracker.com' target=\"_blank\" color='secondary'>CoronaTrackerAPI</Button>\r\n        <Button href='https://api.apify.com' target=\"_blank\" color='secondary'>Apify API</Button>\r\n        <Button href='https://disease.sh/' target=\"_blank\" color='secondary'>\r\n          disease.sh\r\n        </Button>\r\n      </CardContent>\r\n      <CardContent elevation={1} className={styles.card}>\r\n        <Typography align='inherit' variant='h5'>Content</Typography>\r\n        <Button>Made with React, material-ui and chartjs</Button>\r\n      </CardContent>\r\n      <CardContent elevation={1} className={styles.card}>\r\n        <Typography align='inherit' variant='h5'>Code and Contributors</Typography>\r\n        <Button size='large' href=' https://github.com/thchong-code/covid-dash' target=\"_blank\" color='secondary'>\r\n          Github\r\n        </Button>\r\n        <Button size='large' href='https://github.com/imsamuel' target=\"_blank\" color='secondary'>\r\n          imsamuel\r\n        </Button>\r\n      </CardContent>\r\n      <CardContent elevation={1} className={styles.card}>\r\n        <Typography align='inherit' variant='h5'>Find me @</Typography>\r\n        <Button size='large' href=' https://thchong-code.github.io/portfolio-webpage/#/' target=\"_blank\" color='secondary'>\r\n          HC\r\n        </Button>\r\n      </CardContent>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default About;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Paper,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  LinearProgress,\r\n  Button\r\n} from '@material-ui/core';\r\nimport { HorizontalBar } from 'react-chartjs-2';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport { fetchWorldTdyYtd } from '../../api-handler/index';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    textAlign: 'center',\r\n    width: '50% !important'\r\n  },\r\n  card: {\r\n    margin: '2% !important',\r\n    borderRadius: '12px',\r\n  },\r\n  root: {\r\n    margin: '2% !important',\r\n    padding: '2%',\r\n    textAlign: 'justify',\r\n    width: '76%',\r\n    marginLeft: '10% !important',\r\n    marginTop: '0% !important',\r\n    marginBottom: '1% !important',\r\n    borderRadius: '12px',\r\n    backgroundColor: 'rgb(92, 219, 149, 0.1)'\r\n  },\r\n  root1: {\r\n    padding: '1%',\r\n    textAlign: 'justify',\r\n    marginTop: '0% !important',\r\n    // marginBottom: '1% !important',\r\n    // borderRadius: '12px',\r\n    backgroundColor: 'rgb(92, 219, 149, 0.2)'\r\n  },\r\n  infected: {\r\n    borderBottom: '20px solid orange',\r\n    color: 'orange',\r\n    backgroundColor: 'rgba(255,165,0, 0.1)',\r\n  },\r\n  active: {\r\n    borderBottom: '20px solid turquoise',\r\n    color: '#40E0D0',\r\n    backgroundColor: 'rgb(64,224,208, 0.1)'\r\n  },\r\n  recovered: {\r\n    borderBottom: '20px solid springgreen',\r\n    color: 'green',\r\n    backgroundColor: 'rgb(0,128,0, 0.1)'\r\n  },\r\n  deaths: {\r\n    borderBottom: '20px solid red',\r\n    color: 'red',\r\n    backgroundColor: 'rgb(255, 0, 0, 0.1)'\r\n  },\r\n  tables: {\r\n    maxHeight: '240px',\r\n    width: '100% !important',\r\n  },\r\n  more: {\r\n    alignItems: 'center'\r\n  }\r\n});\r\n\r\nconst Cards = ({ data }) => {\r\n  const totalInfected = parseInt(data.totalConfirmed);\r\n  const totalRecovered = parseInt(data.totalRecovered);\r\n  const totalDeaths = parseInt(data.totalDeaths);\r\n  const totalActive = parseInt(data.totalActiveCases);\r\n\r\n  const styles = useStyles();\r\n\r\n  const [tdyData, setTdyData] = useState([]);\r\n  const [ytdData, setYtdData] = useState([]);\r\n\r\n  const columns = [\r\n    { id: \"country\", label: \"Country\" },\r\n    { id: \"todayCases\", label: \"Newly Confirmed\" },\r\n    { id: \"todayDeaths\", label: \"New Deaths\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const fetchedAPI = await fetchWorldTdyYtd();\r\n      const { today } = fetchedAPI;\r\n      const { yesterday } = fetchedAPI;\r\n      setTdyData(today);\r\n      setYtdData(yesterday);\r\n    }\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const topDailyBar = (\r\n    tdyData ? (\r\n      <HorizontalBar\r\n        data={{\r\n          labels: tdyData.map(items => items.country),\r\n          datasets: [\r\n            {\r\n              label: 'New Cases',\r\n              backgroundColor: 'rgba(0,255,127, 0.5)',\r\n              data: tdyData.map(items => items.todayCases),\r\n            },\r\n            {\r\n              label: 'Deaths',\r\n              backgroundColor: 'rgba(0, 0, 225, 0.5)',\r\n              data: tdyData.map(items => items.todayDeaths),\r\n            }\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: true },\r\n          scales: {\r\n            xAxes: [{\r\n              stacked: true,\r\n            }],\r\n            yAxes: [{\r\n              stacked: true\r\n            }]\r\n          }\r\n        }}\r\n      />\r\n    ) : <LinearProgress />\r\n  )\r\n\r\n  const topYtdBar = (\r\n    ytdData ? (\r\n      <HorizontalBar\r\n        data={{\r\n          labels: ytdData.map(items => items.country),\r\n          datasets: [\r\n            {\r\n              label: 'New Cases',\r\n              backgroundColor: 'rgb(128,0,128, 0.5)',\r\n              data: ytdData.map(items => items.todayCases),\r\n            },\r\n            {\r\n              label: 'Deaths',\r\n              backgroundColor: 'yellow',\r\n              data: ytdData.map(items => items.todayDeaths),\r\n            }\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: true },\r\n          scales: {\r\n            xAxes: [{\r\n              stacked: true,\r\n            }],\r\n            yAxes: [{\r\n              stacked: true\r\n            }]\r\n          }\r\n        }}\r\n      />\r\n    ) : <LinearProgress />\r\n  )\r\n\r\n  if (!totalInfected) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div >\r\n      <Grid container spacing={3} justify='center' borderRadius={16}>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography gutterBottom>Confirmed</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalInfected} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography gutterBottom>Recovered</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalRecovered} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.active)}>\r\n          <CardContent>\r\n            <Typography gutterBottom>Active</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalActive} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography gutterBottom>Deaths</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalDeaths} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n      <Paper elevation={0} className={styles.root}>\r\n        <Typography variant='h5' color='textSecondary' gutterBottom style={{ textAlign: 'center' }}>Top 10 Today <span role=\"img\" aria-label=\"grinning face\" id=\"rise trend\">📈</span></Typography>\r\n        <Grid container spacing={3} justify='center'>\r\n          <Grid item>\r\n            <TableContainer className={styles.tables}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((column) => (\r\n                      <TableCell key={column.id}>{column.label}</TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {tdyData.map((row) => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.country}\r\n                      >\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id}>{value.toLocaleString()}</TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Grid>\r\n          <div className={styles.container}>\r\n            <Grid item>\r\n              {topDailyBar}\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n      </Paper>\r\n      <Paper elevation={0} className={styles.root}>\r\n        <Typography variant='h5' color='textSecondary' gutterBottom style={{ textAlign: 'center' }}>Top 10 Yesterday <span role=\"img\" aria-label=\"grinning face\" id=\"rise trend\">📈</span></Typography>\r\n        <Grid container spacing={3} justify='center'>\r\n          <Grid item>\r\n            <TableContainer className={styles.tables}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((column) => (\r\n                      <TableCell key={column.id}>{column.label}</TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {ytdData.map((row) => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.country}\r\n                      >\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id}>{value.toLocaleString()}</TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Grid>\r\n          <div className={styles.container}>\r\n            <Grid item>\r\n              {topYtdBar}\r\n            </Grid>\r\n          </div>\r\n          <Grid item>\r\n            <Typography variant='button' ><Button color='secondary' className={styles.more} href='#/toptensummary'>Comparison Tables Click Here</Button></Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default Cards;","import React, { useState, useEffect } from 'react';\r\nimport { Line, Doughnut } from 'react-chartjs-2';\r\nimport { Typography, Card, Grid, Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { fetchWorldDailyData } from '../../api-handler/index';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    display: 'flexbox',\r\n    textAlign: 'center',\r\n    width: '80%',\r\n    justifyItems: 'center',\r\n  },\r\n  card: {\r\n    padding: '2%',\r\n    width: '50%',\r\n    marginTop: '0% !important',\r\n    backgroundColor: 'rgb(92, 219, 149, 0.1)',\r\n    borderRadius: '12px',\r\n  },\r\n  card1: {\r\n    padding: '2%',\r\n    width: '50%',\r\n    marginTop: '0% !important',\r\n    backgroundColor: 'rgb(92, 219, 149, 0.1)',\r\n    borderRadius: '12px',\r\n  },\r\n  root: {\r\n    marginTop: '0.5%',\r\n    marginLeft: '10%',\r\n    width: '80%',\r\n\r\n  },\r\n  more: {\r\n    backgroundColor: 'rgb(92, 219, 149, 0.2)'\r\n  }\r\n})\r\n\r\nconst Charts = ({ data }) => {\r\n  const [worldDailyData, setWorldData] = useState([]);\r\n\r\n  const totalInfected = parseInt(data.totalConfirmed);\r\n  const totalRecovered = parseInt(data.totalRecovered);\r\n  const totalDeaths = parseInt(data.totalDeaths);\r\n  const totalActive = parseInt(data.totalActiveCases);\r\n  const total = totalInfected + totalDeaths + totalRecovered;\r\n  const styles = useStyles();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setWorldData(await fetchWorldDailyData());\r\n    }\r\n    fetchData();\r\n  }, [])\r\n\r\n  const worldBreakdown = (\r\n    totalInfected ? (\r\n      <Doughnut\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths', 'Active'],\r\n          datasets: [{\r\n            data: [totalInfected, totalRecovered, totalDeaths, totalActive],\r\n            backgroundColor: [\"rgb(255, 99, 132)\", \"rgb(54, 162, 235)\", \"rgb(255, 205, 86)\", \"rgb(0, 225, 0, 0.5)\"]\r\n          }],\r\n\r\n        }}\r\n      />\r\n    ) : null\r\n  )\r\n\r\n  const worldLineGraph = (\r\n    worldDailyData.length\r\n      ? (<Line\r\n        data={{\r\n          labels: worldDailyData.map(items => new Date(items.last_update).toDateString()),\r\n          datasets: [{\r\n            data: worldDailyData.map(items => items.total_cases),\r\n            label: 'Confirmed',\r\n            borderColor: '#FFA500',\r\n            backgroundColor: 'rgba(255,165,0, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: worldDailyData.map(items => items.total_deaths),\r\n            label: 'Deaths',\r\n            borderColor: '#FF0000',\r\n            backgroundColor: 'rgba(255,0,0, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: worldDailyData.map(items => {\r\n              return items.total_recovered;\r\n            }),\r\n            label: 'Recovered',\r\n            borderColor: '#00FF7F',\r\n            backgroundColor: 'rgba(0,255,127, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: worldDailyData.map(items => {\r\n              return items.total_cases - items.total_deaths - items.total_recovered;\r\n            }),\r\n            label: 'Active',\r\n            borderColor: '#FFFF00',\r\n            backgroundColor: 'rgba(255,255,0, 0.3)',\r\n            fill: 'origin'\r\n          }]\r\n        }}\r\n        options={{\r\n          maintainAspectRatio: true,\r\n          responsive: true,\r\n          scales: {\r\n            xAxes: [{\r\n              type: 'time',\r\n              ticks: {\r\n                autoSkip: true,\r\n                maxTicksLimit: 3\r\n              }\r\n            }],\r\n            yAxes: [{\r\n              ticks: {\r\n                maxTicksLimit: 4\r\n              }\r\n            }]\r\n          }\r\n        }} />)\r\n      : null\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Paper elevation={0} className={styles.root}>\r\n        <Grid xs={12} lg={12} container justify='center' direction='row'>\r\n          <Grid item component={Card} className={styles.card}>\r\n            <Typography variant='button' align='center'>Trend</Typography>\r\n            {worldLineGraph}\r\n          </Grid>\r\n          <Grid item component={Card} className={styles.card1}>\r\n            <Typography variant='button' align='center'>Breakdown</Typography>\r\n            {worldBreakdown}\r\n            <Typography variant='button' align='center'>Death Rate: {(totalDeaths / total * 100).toFixed(2)}%</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Charts;","import React from 'react';\r\nimport Cards from './Components/Cards/Cards';\r\nimport Charts from './Components/Charts/Charts';\r\nimport TopBar from './Components/TopBar/TopBar';\r\n\r\nimport { fetchData } from './api-handler/index';\r\n\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    data: {},\r\n    dataDynamic: {},\r\n    date: '',\r\n    country: '',\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n    console.log(fetchedData)\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { data } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='container'>\r\n          <TopBar />\r\n          <Cards data={data} />\r\n          <Charts data={data} />\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n};\r\n\r\nexport default App;\r\n","import React, { useState, useEffect, forwardRef } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Paper,\r\n  LinearProgress,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport MaterialTable from 'material-table';\r\n\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport { fetchWorldTdyYtd } from \"../../api-handler/index\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 530,\r\n    backgroundColor: 'rgb(92, 219, 149, 0.1)'\r\n  },\r\n  card: {\r\n    backgroundColor: 'rgb(92, 219, 149, 0.1)'\r\n  },\r\n  more: {\r\n    alignItems: 'center'\r\n  }\r\n});\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst TopTenTables = () => {\r\n  const styles = useStyles();\r\n  const [tdyData, setTdyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const fetchedAPI = await fetchWorldTdyYtd();\r\n      const { today } = fetchedAPI;\r\n      setTdyData(today);\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const columns = [\r\n    { field: \"country\", title: \"Country\" },\r\n    { field: \"cases\", title: \"Total Cases\" },\r\n    { field: \"todayCases\", title: \"New Cases\" },\r\n    { field: \"deaths\", title: \"Total Deaths\" },\r\n    { field: \"recovered\", title: \"Total Recovered\" },\r\n    { field: \"todayRecovered\", title: \"New Recovered\" },\r\n    { field: \"active\", title: \"Active\" },\r\n    { field: \"casesPerOneMillion\", title: \"Cases per million\" },\r\n    { field: \"deathsPerOneMillion\", title: \"Deaths per million\" },\r\n    { field: \"population\", title: \"Total Population\" },\r\n    { field: \"continent\", title: \"Continent\" }\r\n  ];\r\n\r\n  if (!tdyData.map(item => item.country)) {\r\n    return (\r\n      <LinearProgress />\r\n    )\r\n  }\r\n\r\n  var dataSet = tdyData;\r\n  // const mapData = (dataSet) => {\r\n  //   dataSet.map(item => {\r\n  //     item.country = item.country.toLocaleString()\r\n  //     item.cases = item.cases.toLocaleString()\r\n  //     item.todayCases = item.todayCases.toLocaleString()\r\n  //     item.deaths = item.deaths.toLocaleString()\r\n  //     item.recovered = item.recovered.toLocaleString()\r\n  //     item.todayRecovered = item.todayRecovered.toLocaleString()\r\n  //     item.active = item.active.toLocaleString()\r\n  //     item.casesPerOneMillion = item.casesPerOneMillion.toLocaleString()\r\n  //     item.deathsPerOneMillion = item.deathsPerOneMillion.toLocaleString()\r\n  //     item.population = item.population.toLocaleString()\r\n  //     item.continent = item.continent.toLocaleString()\r\n  //     return item;\r\n  //   })\r\n  // }\r\n  // mapData(dataSet);\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <Paper className={styles.root}>\r\n        <Grid spacing={3} align=\"center\">\r\n          <Grid item>\r\n            <Button color='secondary' className={styles.more} href='#/toptensummary'>Today</Button>\r\n            <Button color='secondary' className={styles.more} href='#/toptensummaryytd'>Yesterday</Button>\r\n            <Button color='secondary' className={styles.more} href='#/'>Home</Button>\r\n          </Grid>\r\n          <Grid item component={Card} className={styles.card}>\r\n            <CardContent>\r\n              <MaterialTable\r\n                icons={tableIcons}\r\n                columns={columns}\r\n                title={window.location.hash === \"#/toptensummary\" ? \"Today's Summary\" : \"Yesterday's Summary\"}\r\n                data={dataSet}\r\n                options={{\r\n                  sorting: true,\r\n                }}\r\n              />\r\n            </CardContent>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TopTenTables;","import React, { useState, useEffect, forwardRef } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Paper,\r\n  LinearProgress,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport MaterialTable from 'material-table';\r\n\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport { fetchWorldTdyYtd } from \"../../api-handler/index\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 530,\r\n    backgroundColor: 'rgb(92, 219, 149, 0.1)'\r\n  },\r\n  card: {\r\n    backgroundColor: 'rgb(92, 219, 149, 0.1)'\r\n  },\r\n});\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst TablesYtd = () => {\r\n  const styles = useStyles();\r\n  const [ytdData, setYtdData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const fetchedAPI = await fetchWorldTdyYtd();\r\n      const { yesterdayAll } = fetchedAPI;\r\n      setYtdData(yesterdayAll);\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const columns = [\r\n    { field: \"country\", title: \"Country\" },\r\n    { field: \"cases\", title: \"Total Cases\" },\r\n    { field: \"todayCases\", title: \"New Cases\" },\r\n    { field: \"deaths\", title: \"Total Deaths\" },\r\n    { field: \"recovered\", title: \"Total Recovered\" },\r\n    { field: \"todayRecovered\", title: \"New Recovered\" },\r\n    { field: \"active\", title: \"Active\" },\r\n    { field: \"casesPerOneMillion\", title: \"Cases per million\" },\r\n    { field: \"deathsPerOneMillion\", title: \"Deaths per million\" },\r\n    { field: \"population\", title: \"Total Population\" },\r\n    { field: \"continent\", title: \"Continent\" }\r\n  ];\r\n\r\n  if (!ytdData.map(item => item.country)) {\r\n    return (\r\n      <LinearProgress />\r\n    )\r\n  }\r\n\r\n  var dataSet = ytdData;\r\n  // const mapData = (dataSet) => {\r\n  //   dataSet.map(item => {\r\n  //     item.country\r\n  //     item.case\r\n  //     item.todayCases = i\r\n  //     item.deaths\r\n  //     item.recovered =\r\n  //       item.todayRecovered = item.\r\n  //         item.active\r\n  //     item.casesPerOneMillion = item.case\r\n  //     item.deathsPerOneMillion = item.death\r\n  //     item.population = i\r\n  //     item.continent = \r\n  //     return item;\r\n  //   })\r\n  // }\r\n  // mapData(dataSet);\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <Paper className={styles.root}>\r\n        <Grid spacing={3} align=\"center\">\r\n          <Grid item component={Card} className={styles.card}>\r\n            <Grid item>\r\n              <Button color='secondary' className={styles.more} href='#/summary'>Today</Button>\r\n              <Button color='secondary' className={styles.more} href='#/ytdsummary'>Yesterday</Button>\r\n              <Button color='secondary' className={styles.more} href='#/'>Home</Button>\r\n            </Grid>\r\n            <CardContent>\r\n              <MaterialTable\r\n                icons={tableIcons}\r\n                columns={columns}\r\n                title={window.location.hash === \"#/summary\" ? \"Today's Summary\" : \"Yesterday's Summary\"}\r\n                data={dataSet}\r\n                options={{\r\n                  sorting: true,\r\n                }}\r\n              />\r\n            </CardContent>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TablesYtd;","import React, { useState, useEffect, forwardRef } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Paper,\r\n  LinearProgress,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport MaterialTable from 'material-table';\r\n\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport { fetchWorldTdyYtd } from \"../../api-handler/index\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 530,\r\n    backgroundColor: 'rgb(92, 219, 149, 0.1)'\r\n  },\r\n  card: {\r\n    backgroundColor: 'rgb(92, 219, 149, 0.1)'\r\n  },\r\n});\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst TopTenYtd = () => {\r\n  const styles = useStyles();\r\n  const [ytdData, setYtdData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const fetchedAPI = await fetchWorldTdyYtd();\r\n      const { yesterday } = fetchedAPI;\r\n      setYtdData(yesterday);\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const columns = [\r\n    { field: \"country\", title: \"Country\" },\r\n    { field: \"cases\", title: \"Total Cases\" },\r\n    { field: \"todayCases\", title: \"New Cases\" },\r\n    { field: \"deaths\", title: \"Total Deaths\" },\r\n    { field: \"recovered\", title: \"Total Recovered\" },\r\n    { field: \"todayRecovered\", title: \"New Recovered\" },\r\n    { field: \"active\", title: \"Active\" },\r\n    { field: \"casesPerOneMillion\", title: \"Cases per million\" },\r\n    { field: \"deathsPerOneMillion\", title: \"Deaths per million\" },\r\n    { field: \"population\", title: \"Total Population\" },\r\n    { field: \"continent\", title: \"Continent\" }\r\n  ];\r\n\r\n  if (!ytdData.map(item => item.country)) {\r\n    return (\r\n      <LinearProgress />\r\n    )\r\n  }\r\n\r\n  var dataSet = ytdData;\r\n  // const mapData = (dataSet) => {\r\n  //   dataSet.map(item => {\r\n  //     item.country = item.country.toLocaleString()\r\n  //     item.cases = item.cases.toLocaleString()\r\n  //     item.todayCases = item.todayCases.toLocaleString()\r\n  //     item.deaths = item.deaths.toLocaleString()\r\n  //     item.recovered = item.recovered.toLocaleString()\r\n  //     item.todayRecovered = item.todayRecovered.toLocaleString()\r\n  //     item.active = item.active.toLocaleString()\r\n  //     item.casesPerOneMillion = item.casesPerOneMillion.toLocaleString()\r\n  //     item.deathsPerOneMillion = item.deathsPerOneMillion.toLocaleString()\r\n  //     item.population = item.population.toLocaleString()\r\n  //     item.continent = item.continent.toLocaleString()\r\n  //     return item;\r\n  //   })\r\n  // }\r\n  // mapData(dataSet);\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <Paper className={styles.root}>\r\n        <Grid spacing={3} align=\"center\">\r\n          <Grid item>\r\n            <Button color='secondary' className={styles.more} href='#/toptensummary'>Today</Button>\r\n            <Button color='secondary' className={styles.more} href='#/toptensummaryytd'>Yesterday</Button>\r\n            <Button color='secondary' className={styles.more} href='#/'>Home</Button>\r\n          </Grid>\r\n          <Grid item component={Card} className={styles.card}>\r\n            <CardContent>\r\n              <MaterialTable\r\n                icons={tableIcons}\r\n                columns={columns}\r\n                title={window.location.hash === \"#/toptensummary\" ? \"Today's Summary\" : \"Yesterday's Summary\"}\r\n                data={dataSet}\r\n                options={{\r\n                  sorting: true,\r\n                }}\r\n              />\r\n            </CardContent>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TopTenYtd;","import React, { useState, useEffect } from 'react';\r\nimport { Map, CircleMarker, Popup, TileLayer } from 'react-leaflet';\r\n\r\nimport { fetchLocationData } from '../../api-handler/index';\r\nimport TopBar from '../TopBar/TopBar';\r\n\r\nimport './globe.css';\r\n\r\nconst Globe = () => {\r\n  const [locData, setLocData] = useState([]);\r\n  const [location, setLocation] = useState(false);\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const fetchedData = await fetchLocationData();\r\n      setLocData(fetchedData);\r\n    }\r\n    fetchAPI();\r\n  }, []);\r\n  console.log(locData);\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <Map center={[8, 0]} zoom={2.3}>\r\n        <TileLayer\r\n          url='https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png'\r\n          attribution='&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\r\n        />\r\n        {locData.slice(0, 10).map(item =>\r\n          <CircleMarker\r\n            key={item.countryInfo._id}\r\n            center={[\r\n              item.countryInfo.lat,\r\n              item.countryInfo.long\r\n            ]}\r\n            onClick={() => setLocation(item)}\r\n            radius={24}\r\n            color={'red'}\r\n          />\r\n        )}\r\n        {locData.slice(10, 20).map(item =>\r\n          <CircleMarker\r\n            key={item.countryInfo._id}\r\n            center={[\r\n              item.countryInfo.lat,\r\n              item.countryInfo.long\r\n            ]}\r\n            onClick={() => setLocation(item)}\r\n            radius={14}\r\n            color={'orange'}\r\n          />\r\n        )}\r\n        {locData.slice(20, locData.length + 1).map(item =>\r\n          <CircleMarker\r\n            key={item.countryInfo._id}\r\n            center={[\r\n              item.countryInfo.lat,\r\n              item.countryInfo.long\r\n            ]}\r\n            onClick={() => setLocation(item)}\r\n            radius={8}\r\n            color={'green'}\r\n          />\r\n\r\n        )}\r\n\r\n        {location && (\r\n          <Popup\r\n            position={[\r\n              location.countryInfo.lat,\r\n              location.countryInfo.long\r\n            ]}\r\n            onClose={() => setLocation(false)}\r\n          >\r\n            <div>\r\n              <h2>{location.country}</h2>\r\n              <p>Cases:&nbsp;{location.cases.toLocaleString()}</p>\r\n              <p>Deaths:&nbsp;{location.deaths.toLocaleString()}</p>\r\n              <p>Active:&nbsp;{location.active.toLocaleString()}</p>\r\n              <p>Recovered:&nbsp;{location.recovered.toLocaleString()}</p>\r\n              <p>Critical:&nbsp;{location.critical.toLocaleString()}</p>\r\n            </div>\r\n          </Popup>\r\n        )}\r\n      </Map>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Globe;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Tables from './Components/Tables/Tables';\r\nimport News from './Components/News/News';\r\nimport About from './Components/About/About';\r\nimport App from './App';\r\nimport TopTenTables from './Components/Tables/TopTenTables';\r\nimport TablesYtd from './Components/Tables/TablesYtd';\r\nimport TopTenYtd from './Components/Tables/TopTenYtd';\r\nimport Globe from './Components/Globe/Globe';\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/' component={App} />\r\n      <Route path='/summary' component={Tables} />\r\n      <Route path='/ytdsummary' component={TablesYtd} />\r\n      <Route path='/toptensummary' component={TopTenTables} />\r\n      <Route path='/toptensummaryytd' component={TopTenYtd} />\r\n      <Route path='/globe' component={Globe} />\r\n      <Route path='/news' component={News} />\r\n      <Route path='/about' component={About} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Routes;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nimport Routes from './Route';\r\n\r\nReactDOM.render(\r\n  <HashRouter basename='/covid-dash/'>\r\n    <Routes />\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}