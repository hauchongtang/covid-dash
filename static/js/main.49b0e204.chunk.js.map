{"version":3,"sources":["../node_modules/jspdf/dist sync","Components/TopBar/TopBar.jsx","api-handler/index.js","Components/Tables/Tables.jsx","Components/Cards/SGCards.jsx","Components/sgData/Singapore.jsx","Components/About/About.jsx","Components/Cards/Cards.jsx","Components/Charts/Charts.jsx","App.js","Components/Tables/TopTenTables.jsx","Components/Tables/TablesYtd.jsx","Components/Tables/TopTenYtd.jsx","Components/Globe/Globe.jsx","Components/LandingPage/LandingPage.jsx","Route.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","useStyles","makeStyles","root","backgroundColor","padding","margin","root1","textAlign","marginTop","title","flexGrow","paddingLeft","TopBar","styles","AppBar","position","color","elevation","className","Toolbar","Typography","variant","Link","href","role","aria-label","Button","size","current","onClick","window","location","reload","Paper","target","fetchData","a","axios","get","response","data","console","log","fetchDailyData","country","variableUrl","url","fetchWorldDailyData","fetchCurrentData","infected","confirmed","value","recovered","deaths","modifiedData","active","fetchSGData","hospitalizedData","community","inCommunityFacilites","stable","stableHospitalized","critical","criticalHospitalized","fetchWorldTdyYtd","urlTodayUnsorted","urlYtd","urlYtdUnsorted","todayResponse","ytdResponse","todayRes","ytdRes","today","slice","todayAll","yesterday","yesterdayAll","fetchLocationData","width","container","maxHeight","card","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Tables","useState","tdyData","setTdyData","useEffect","fetchedAPI","fetchAPI","columns","field","customSort","b","parseInt","cases","replace","todayCases","todayRecovered","casesPerOneMillion","deathsPerOneMillion","population","map","item","LinearProgress","dataSet","toLocaleString","continent","mapData","Grid","spacing","align","more","component","Card","CardContent","icons","hash","options","sorting","marginBottom","borderRadius","borderBottom","SGCards","setData","sgData","getAPI","totalInfected","totalRecovered","totalDeaths","totalActive","justify","xs","md","cx","gutterBottom","start","end","duration","separator","display","justifyContent","marginLeft","card1","card2","card3","Singapore","dailyData","setDailyData","currentData","setCurrentData","hospitalData","setHospitalData","sgLineGraph","length","labels","items","Date","toDateString","datasets","Confirmed","label","borderColor","fill","Deaths","Recovered","Active","maintainAspectRatio","responsive","scales","xAxes","type","ticks","autoSkip","maxTicksLimit","yAxes","sgBarGraph","legend","hospitalBarGraph","activeBreakdown","info","direction","alignItems","About","tables","Cards","totalConfirmed","totalActiveCases","ytdData","setYtdData","topDailyBar","todayDeaths","stacked","topYtdBar","style","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","key","TableBody","row","hover","tabIndex","justifyItems","mockData","Charts","worldDailyData","setWorldData","total","worldBreakdown","worldLineGraph","Object","values","lg","toFixed","App","state","dataDynamic","date","fetchedData","this","setState","React","Component","TopTenTables","TablesYtd","TopTenYtd","Globe","locData","setLocData","setLocation","Map","center","zoom","TileLayer","attribution","CircleMarker","countryInfo","_id","lat","long","radius","Popup","onClose","AutoPlaySwipeableViews","autoPlay","SwipeableViews","screenshots","imgPath","theme","h1","fontSize","h2","fontFamily","header","height","palette","background","default","img","overflow","Landing","useTheme","activeStep","setActiveStep","maxSteps","axis","index","onChangeIndex","step","enableMouseEvents","Math","abs","src","alt","square","MobileStepper","steps","nextButton","prevActiveStep","disabled","backButton","List","ListItem","button","ListItemText","primary","Routes","exact","path","ReactDOM","render","basename","Route","document","getElementById"],"mappings":"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","file":"static/js/main.49b0e204.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 385;","import React from 'react';\r\nimport { AppBar, Toolbar, Typography, Button, Paper, Link } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: 'rgb(92, 219, 149, 0.2)',\r\n    padding: '0% !important',\r\n    margin: '0% !important'\r\n  },\r\n  root1: {\r\n    padding: '1%',\r\n    textAlign: 'justify',\r\n    marginTop: '0% !important',\r\n    backgroundColor: 'rgb(92, 219, 149, 0.2)'\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: 'start',\r\n    paddingLeft: 'inherit'\r\n  }\r\n})\r\n\r\nconst TopBar = () => {\r\n  const styles = useStyles();\r\n\r\n  const reloadPage = () => window.location.reload(false)\r\n\r\n  return (\r\n    <>\r\n      <AppBar position='static' color='transparent' elevation={0} className={styles.root}>\r\n        <Toolbar>\r\n          <Typography variant='h6' className={styles.title}>\r\n            <Link href='#/'><span role=\"img\" aria-label=\"grinning face\" id=\"rise trend\">𝗖𝗢𝗩𝗜𝗗🦠𝗧𝗥𝗔𝗖𝗞𝗘𝗥</span></Link>\r\n          </Typography>\r\n\r\n          <Button size='large' href=' #/home' color='secondary' className={styles.current}>\r\n            Home\r\n              </Button>\r\n          <Button size='large' href=' #/globe' color='secondary' className={styles.current}>\r\n            Globe\r\n              </Button>\r\n          {/* <Button size='large' href=' #/singapore' color='secondary' className={styles.current}>\r\n            Singapore\r\n            </Button> */}\r\n          <Button size='large' href=' #/summary' color='secondary' className={styles.current}>\r\n            Summary\r\n              </Button>\r\n\r\n          <Button size='large' href=' #/about' color='secondary' className={styles.current}>\r\n            About\r\n              </Button>\r\n\r\n          <Button size='large' onClick={() => reloadPage()} color='secondary' className={styles.current}>\r\n            <span role=\"img\" aria-label=\"grinning face\" id=\"rise trend\">🔄</span>\r\n          </Button>\r\n\r\n        </Toolbar >\r\n      </AppBar >\r\n      <Paper elevation={0} className={styles.root1}>\r\n        <Typography variant='button'>\r\n          For the latest travel advisories visit\r\n          <Button color='secondary' href='https://www.who.int/emergencies/diseases/novel-coronavirus-2019/travel-advice' target=\"_blank\">World Health Organisation</Button>\r\n        </Typography>\r\n      </Paper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TopBar;","import axios from 'axios';\r\n\r\nexport const fetchData = async () => {\r\n  try {\r\n    const url = 'https://api.coronatracker.com/v3/stats/worldometer/global';\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async (country) => {\r\n  const url = 'https://api.covid19api.com/total/country';\r\n  var variableUrl = url;\r\n  if (country) {\r\n    variableUrl = `${url}/${country}`;\r\n  }\r\n  if (!country) {\r\n    variableUrl = `${url}/singapore`;\r\n  }\r\n  try {\r\n    const response = await axios.get(variableUrl);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchWorldDailyData = async () => {\r\n  try {\r\n    const url = 'https://corona.lmao.ninja/v2/historical/all';\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const countries = async () => {\r\n  try {\r\n    const url = 'https://covid19.mathdro.id/api/countries';\r\n    const response = await axios.get(url);\r\n    return response.data.countries;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchCurrentData = async () => {\r\n  try {\r\n    const url = 'https://covid19.mathdro.id/api/countries/Singapore';\r\n    const response = await axios.get(url);\r\n    const infected = response.data.confirmed.value;\r\n    const recovered = response.data.recovered.value;\r\n    const deaths = response.data.deaths.value;\r\n    const active = infected - deaths - recovered;\r\n    const modifiedData = { infected, recovered, active, deaths };\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchSummaryData = async () => {\r\n  try {\r\n    const url = 'https://api.covid19api.com/summary';\r\n    const response = await axios.get(url);\r\n    const dataSet = response.data;\r\n    const countriesData = dataSet.Countries;\r\n    return countriesData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchTopNews = async () => {\r\n  try {\r\n    const url = 'https://api.coronatracker.com/news/trending';\r\n    const response = await axios.get(url);\r\n    const dataSet = response.data.items;\r\n    return dataSet;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchTopDaily = async () => {\r\n  try {\r\n    const url = 'https://api.coronatracker.com/v3/analytics/dailyNewStats?limit=10';\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchSGData = async () => {\r\n  try {\r\n    const url = 'https://api.apify.com/v2/key-value-stores/yaPbKe9e5Et61bl7W/records/LATEST?disableRedirect=true';\r\n    const response = await axios.get(url);\r\n    const hospitalizedData = {\r\n      community: response.data.inCommunityFacilites,\r\n      stable: response.data.stableHospitalized,\r\n      critical: response.data.criticalHospitalized\r\n    }\r\n    return hospitalizedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchWorldTdyYtd = async () => {\r\n  try {\r\n    const urlToday = 'https://disease.sh/v3/covid-19/countries?sort=todayCases';\r\n    const urlTodayUnsorted = 'https://disease.sh/v3/covid-19/countries';\r\n    const urlYtd = 'https://disease.sh/v3/covid-19/countries?yesterday=true&sort=todayCases';\r\n    const urlYtdUnsorted = 'https://disease.sh/v3/covid-19/countries?yesterday=true';\r\n    const todayResponse = await axios.get(urlToday);\r\n    const ytdResponse = await axios.get(urlYtd);\r\n    const todayRes = await axios.get(urlTodayUnsorted);\r\n    const ytdRes = await axios.get(urlYtdUnsorted);\r\n    const modifiedData = {\r\n      today: todayResponse.data.slice(0, 10),\r\n      todayAll: todayRes.data,\r\n      yesterday: ytdResponse.data.slice(0, 10),\r\n      yesterdayAll: ytdRes.data\r\n    }\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchLocationData = async () => {\r\n  try {\r\n    const url = 'https://corona.lmao.ninja/v2/countries?sort=cases';\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}","import React, { useState, useEffect, forwardRef } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Paper,\r\n  LinearProgress,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport MaterialTable from 'material-table';\r\n\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport { fetchWorldTdyYtd } from \"../../api-handler/index\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 530,\r\n    backgroundColor: 'rgb(92, 219, 149, 0.1)'\r\n  },\r\n  card: {\r\n    backgroundColor: 'rgb(92, 219, 149, 0.1)'\r\n  },\r\n});\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst Tables = () => {\r\n  const styles = useStyles();\r\n  const [tdyData, setTdyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const fetchedAPI = await fetchWorldTdyYtd();\r\n      const { todayAll } = fetchedAPI;\r\n      setTdyData(todayAll);\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const columns = [\r\n    { field: \"country\", title: \"Country\" },\r\n    { field: \"cases\", title: \"Total Cases\", customSort: (a, b) => parseInt(a.cases.replace(/,/g, \"\")) - parseInt(b.cases.replace(/,/g, \"\")) },\r\n    { field: \"todayCases\", title: \"New Cases\", customSort: (a, b) => parseInt(a.todayCases.replace(/,/g, \"\")) - parseInt(b.todayCases.replace(/,/g, \"\")) },\r\n    { field: \"deaths\", title: \"Total Deaths\", customSort: (a, b) => parseInt(a.deaths.replace(/,/g, \"\")) - parseInt(b.deaths.replace(/,/g, \"\")) },\r\n    { field: \"recovered\", title: \"Total Recovered\", customSort: (a, b) => parseInt(a.recovered.replace(/,/g, \"\")) - parseInt(b.recovered.replace(/,/g, \"\")) },\r\n    { field: \"todayRecovered\", title: \"New Recovered\", customSort: (a, b) => parseInt(a.todayRecovered.replace(/,/g, \"\")) - parseInt(b.todayRecovered.replace(/,/g, \"\")) },\r\n    { field: \"active\", title: \"Active\", customSort: (a, b) => parseInt(a.active.replace(/,/g, \"\")) - parseInt(b.active.replace(/,/g, \"\")) },\r\n    { field: \"casesPerOneMillion\", title: \"Cases per million\", customSort: (a, b) => parseInt(a.casesPerOneMillion.replace(/,/g, \"\")) - parseInt(b.casesPerOneMillion.replace(/,/g, \"\")) },\r\n    { field: \"deathsPerOneMillion\", title: \"Deaths per million\", customSort: (a, b) => parseInt(a.deathsPerOneMillion.replace(/,/g, \"\")) - parseInt(b.deathsPerOneMillion.replace(/,/g, \"\")) },\r\n    { field: \"population\", title: \"Total Population\", customSort: (a, b) => parseInt(a.population.replace(/,/g, \"\")) - parseInt(b.population.replace(/,/g, \"\")) },\r\n    { field: \"continent\", title: \"Continent\" }\r\n  ];\r\n\r\n  if (!tdyData.map(item => item.country)) {\r\n    return (\r\n      <LinearProgress />\r\n    )\r\n  }\r\n\r\n  var dataSet = tdyData;\r\n  const mapData = (dataSet) => {\r\n    dataSet.map(item => {\r\n      item.country = item.country.toLocaleString()\r\n      item.cases = item.cases.toLocaleString()\r\n      item.todayCases = item.todayCases.toLocaleString()\r\n      item.deaths = item.deaths.toLocaleString()\r\n      item.recovered = item.recovered.toLocaleString()\r\n      item.todayRecovered = item.todayRecovered.toLocaleString()\r\n      item.active = item.active.toLocaleString()\r\n      item.casesPerOneMillion = item.casesPerOneMillion.toLocaleString()\r\n      item.deathsPerOneMillion = item.deathsPerOneMillion.toLocaleString()\r\n      item.population = item.population.toLocaleString()\r\n      item.continent = item.continent.toLocaleString()\r\n      return item;\r\n    })\r\n  }\r\n  mapData(dataSet);\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <Paper className={styles.root}>\r\n        <Grid spacing={3} align=\"center\">\r\n          <Grid item>\r\n            <Button color='secondary' className={styles.more} href='#/summary'>Today</Button>\r\n            <Button color='secondary' className={styles.more} href='#/ytdsummary'>Yesterday</Button>\r\n            <Button color='secondary' className={styles.more} href='#/'>Home</Button>\r\n          </Grid>\r\n          <Grid item component={Card} className={styles.card}>\r\n            <CardContent>\r\n              <MaterialTable\r\n                icons={tableIcons}\r\n                columns={columns}\r\n                title={window.location.hash === \"#/summary\" ? \"Today's Summary\" : \"Yesterday's Summary\"}\r\n                data={dataSet}\r\n                options={{\r\n                  sorting: true,\r\n                }}\r\n              />\r\n            </CardContent>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tables;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Grid, Card, CardContent, Typography } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { fetchCurrentData } from '../../api-handler';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    margin: 0,\r\n    textAlign: 'center',\r\n  },\r\n  card: {\r\n    margin: '2% !important',\r\n    marginBottom: '0% !important',\r\n    borderRadius: '12px',\r\n  },\r\n  root: {\r\n    padding: '2% !important',\r\n    margin: '10% !important',\r\n    marginTop: '4% !important',\r\n    marginBottom: '2% !important',\r\n    textAlign: 'justify',\r\n  },\r\n  infected: {\r\n    borderBottom: '20px solid orange',\r\n    color: 'orange',\r\n    backgroundColor: 'rgba(255,165,0, 0.1)',\r\n  },\r\n  active: {\r\n    borderBottom: '20px solid turquoise',\r\n    color: '#40E0D0',\r\n    backgroundColor: 'rgb(64,224,208, 0.1)'\r\n  },\r\n  recovered: {\r\n    borderBottom: '20px solid springgreen',\r\n    color: 'green',\r\n    backgroundColor: 'rgb(0,128,0, 0.1)'\r\n  },\r\n  deaths: {\r\n    borderBottom: '20px solid red',\r\n    color: 'red',\r\n    backgroundColor: 'rgb(255, 0, 0, 0.1)'\r\n  },\r\n});\r\n\r\nconst SGCards = () => {\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    const getAPI = async () => {\r\n      const sgData = await fetchCurrentData();\r\n      setData(sgData);\r\n    }\r\n    getAPI()\r\n  }, []);\r\n  const totalInfected = data.infected;\r\n  const totalRecovered = data.recovered;\r\n  const totalDeaths = data.deaths;\r\n  const totalActive = data.active;\r\n\r\n  const styles = useStyles();\r\n\r\n  if (!totalInfected) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify='center'>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography gutterBottom>Confirmed</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalInfected} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.active)}>\r\n          <CardContent>\r\n            <Typography gutterBottom>Active</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalActive} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography gutterBottom>Recovered</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalRecovered} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography gutterBottom>Deaths</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalDeaths} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SGCards;","import React, { useState, useEffect } from 'react';\r\nimport { Line, HorizontalBar, Doughnut } from 'react-chartjs-2';\r\nimport { Typography, Card, Grid, Paper } from '@material-ui/core';\r\nimport { fetchDailyData, fetchCurrentData, fetchSGData } from '../../api-handler/index';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TopBar from '../TopBar/TopBar';\r\nimport SGCards from '../Cards/SGCards';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    display: 'flexbox',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    marginTop: '0% !important',\r\n  },\r\n  root: {\r\n    width: '80%',\r\n    marginLeft: '10% !important',\r\n    marginTop: '2% !important'\r\n  },\r\n  root1: {\r\n    width: '80%',\r\n    marginLeft: '10% !important',\r\n    marginTop: '1% !important'\r\n  },\r\n  card: {\r\n    width: '50%',\r\n    padding: '2% !important',\r\n    marginTop: '0% !important',\r\n    borderRadius: '12px',\r\n    backgroundColor: 'rgb(92, 219, 149, 0.1)',\r\n  },\r\n  card1: {\r\n    width: '50%',\r\n    padding: '2% !important',\r\n    marginTop: '0% !important',\r\n    borderRadius: '12px',\r\n    backgroundColor: 'rgb(92, 219, 149, 0.1)',\r\n  },\r\n  card2: {\r\n    width: '50%',\r\n    padding: '2% !important',\r\n    marginTop: '0% !important',\r\n    borderRadius: '12px',\r\n    backgroundColor: 'rgb(92, 219, 149, 0.1)',\r\n  },\r\n  card3: {\r\n    width: '50%',\r\n    padding: '2% !important',\r\n    marginTop: '0% !important',\r\n    borderRadius: '12px',\r\n    backgroundColor: 'rgb(92, 219, 149, 0.1)',\r\n  }\r\n})\r\n\r\nconst Singapore = () => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n  const [currentData, setCurrentData] = useState({});\r\n  const [hospitalData, setHospitalData] = useState({});\r\n\r\n  const styles = useStyles();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setDailyData(await fetchDailyData());\r\n      setCurrentData(await fetchCurrentData());\r\n      setHospitalData(await fetchSGData());\r\n    }\r\n    fetchData();\r\n  }, [])\r\n\r\n  const sgLineGraph = (\r\n    dailyData.length\r\n      ? (<Line\r\n        data={{\r\n          labels: dailyData.map(items => new Date(items.Date).toDateString()),\r\n          datasets: [{\r\n            data: dailyData.map(items => items.Confirmed),\r\n            label: 'Confirmed',\r\n            borderColor: '#FFA500',\r\n            backgroundColor: 'rgba(255,165,0, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: dailyData.map(items => items.Deaths),\r\n            label: 'Deaths',\r\n            borderColor: '#FF0000',\r\n            backgroundColor: 'rgba(255,0,0, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: dailyData.map(items => items.Recovered),\r\n            label: 'Recovered',\r\n            borderColor: '#00FF7F',\r\n            backgroundColor: 'rgba(0,255,127, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: dailyData.map(items => items.Active),\r\n            label: 'Active',\r\n            borderColor: '#FFFF00',\r\n            backgroundColor: 'rgba(255,255,0, 0.3)',\r\n            fill: 'origin'\r\n          }]\r\n        }}\r\n        options={{\r\n          maintainAspectRatio: true,\r\n          responsive: true,\r\n          scales: {\r\n            xAxes: [{\r\n              type: 'time',\r\n              ticks: {\r\n                autoSkip: true,\r\n                maxTicksLimit: 4\r\n              }\r\n            }],\r\n            yAxes: [{\r\n              ticks: {\r\n                maxTicksLimit: 4\r\n              }\r\n            }]\r\n          }\r\n        }} />)\r\n      : null\r\n  )\r\n\r\n  const sgBarGraph = (\r\n    currentData ? (\r\n      <HorizontalBar\r\n        data={{\r\n          labels: ['Confirmed', 'Recovered', 'Active', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(255,165,0, 0.5)', 'rgba(0,255,127, 0.5)', 'rgba(255,255,0, 0.5)', 'rgba(255, 0, 0, 0.3)'],\r\n              data: [currentData.infected, currentData.recovered, currentData.active, currentData.deaths],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false }\r\n        }}\r\n      />\r\n    ) : null\r\n  )\r\n\r\n  const hospitalBarGraph = (\r\n    hospitalData ? (\r\n      <HorizontalBar\r\n        data={{\r\n          labels: ['Community', 'Stable', 'Critical'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(255,165,0, 0.5)', 'rgba(0,255,127, 0.5)', 'rgba(255,255,0, 0.5)'],\r\n              data: [hospitalData.community, hospitalData.stable, hospitalData.critical]\r\n            }\r\n          ]\r\n        }}\r\n        options={{\r\n          legend: { display: false }\r\n        }}\r\n      />) : null\r\n  )\r\n\r\n  const activeBreakdown = (\r\n    hospitalData ? (\r\n      <Doughnut\r\n        data={{\r\n          labels: ['Community', 'Stable', 'Critical'],\r\n          datasets: [{\r\n            data: [hospitalData.community, hospitalData.stable, hospitalData.critical],\r\n            backgroundColor: [\"rgb(255, 99, 132)\", \"rgb(54, 162, 235)\", \"rgb(255, 205, 86)\"]\r\n          }],\r\n\r\n        }}\r\n      />\r\n    ) : null\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <div className={styles.info}>\r\n        <SGCards />\r\n      </div>\r\n      <Paper elevation={0} className={styles.root}>\r\n        <Grid xs={12} container justify='center' direction='row'>\r\n          <Grid item component={Card} className={styles.card}>\r\n            <Typography variant='button' align='center'>Trend</Typography>\r\n            {sgLineGraph}\r\n          </Grid>\r\n          <Grid item component={Card} className={styles.card1}>\r\n            <Typography variant='button' align='center'>Summary</Typography>\r\n            {sgBarGraph}\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      <Paper elevation={0} className={styles.root1}>\r\n        <Grid xs={12} container alignItems='center'>\r\n          <Grid item component={Card} className={styles.card2}>\r\n            <Typography variant='button' align='center'>Breakdown of Active Cases</Typography>\r\n            {activeBreakdown}\r\n          </Grid>\r\n          <Grid item component={Card} className={styles.card3}>\r\n            <Typography variant='button' align='center'>{currentData.active} Active Cases in Hospital</Typography>\r\n            {hospitalBarGraph}\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Singapore;","import React from 'react';\r\nimport { CardContent, Typography, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport TopBar from '../TopBar/TopBar';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    textAlign: 'center',\r\n  },\r\n  card: {\r\n    margin: '2% !important',\r\n    borderColor: 'transparent',\r\n    textAlign: 'justify',\r\n  },\r\n})\r\n\r\nconst About = () => {\r\n  const styles = useStyles();\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <CardContent elevation={1} className={styles.card}>\r\n        <Typography align='inherit' variant='h5'>We get our data from</Typography>\r\n        <Button href='https://api.covid19api.com' target=\"_blank\" color='secondary'>covid19api</Button>\r\n        <Button href='https://covid19-api.org' target=\"_blank\" color='secondary'>covid19-api</Button>\r\n        <Button href='https://covid19.mathdro.id' target=\"_blank\" color='secondary'>covid19.mathdro.id</Button>\r\n        <Button href='https://api.coronatracker.com' target=\"_blank\" color='secondary'>CoronaTrackerAPI</Button>\r\n        <Button href='https://api.apify.com' target=\"_blank\" color='secondary'>Apify API</Button>\r\n        <Button href='https://disease.sh/' target=\"_blank\" color='secondary'>\r\n          disease.sh\r\n        </Button>\r\n      </CardContent>\r\n      <CardContent elevation={1} className={styles.card}>\r\n        <Typography align='inherit' variant='h5'>Content</Typography>\r\n        <Button>Made with React, material-ui and chartjs</Button>\r\n      </CardContent>\r\n      <CardContent elevation={1} className={styles.card}>\r\n        <Typography align='inherit' variant='h5'>Code and Contributors</Typography>\r\n        <Button size='large' href=' https://github.com/hauchongtang/covid-dash' target=\"_blank\" color='secondary'>\r\n          Github\r\n        </Button>\r\n        <Button size='large' href='https://github.com/imsamuel' target=\"_blank\" color='secondary'>\r\n          imsamuel\r\n        </Button>\r\n      </CardContent>\r\n      <CardContent elevation={1} className={styles.card}>\r\n        <Typography align='inherit' variant='h5'>Find me @</Typography>\r\n        <Button size='large' href=' https://hauchongtang.github.io/portfolio-webpage/#/' target=\"_blank\" color='secondary'>\r\n          <Button size='large' href=' https://hauchongtang.github.io/' target=\"_blank\" color='secondary'>\r\n            HC\r\n        </Button>\r\n        </Button>\r\n      </CardContent>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default About;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Paper,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  LinearProgress,\r\n  Button\r\n} from '@material-ui/core';\r\nimport { HorizontalBar } from 'react-chartjs-2';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport { fetchWorldTdyYtd } from '../../api-handler/index';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    textAlign: 'center',\r\n    width: '50% !important'\r\n  },\r\n  card: {\r\n    margin: '2% !important',\r\n    borderRadius: '12px',\r\n  },\r\n  root: {\r\n    margin: '2% !important',\r\n    padding: '2%',\r\n    textAlign: 'justify',\r\n    width: '76%',\r\n    marginLeft: '10% !important',\r\n    marginTop: '0% !important',\r\n    marginBottom: '1% !important',\r\n    borderRadius: '12px',\r\n    backgroundColor: 'rgb(92, 219, 149, 0.1)'\r\n  },\r\n  root1: {\r\n    padding: '1%',\r\n    textAlign: 'justify',\r\n    marginTop: '0% !important',\r\n    // marginBottom: '1% !important',\r\n    // borderRadius: '12px',\r\n    backgroundColor: 'rgb(92, 219, 149, 0.2)'\r\n  },\r\n  infected: {\r\n    borderBottom: '20px solid orange',\r\n    color: 'orange',\r\n    backgroundColor: 'rgba(255,165,0, 0.1)',\r\n  },\r\n  active: {\r\n    borderBottom: '20px solid turquoise',\r\n    color: '#40E0D0',\r\n    backgroundColor: 'rgb(64,224,208, 0.1)'\r\n  },\r\n  recovered: {\r\n    borderBottom: '20px solid springgreen',\r\n    color: 'green',\r\n    backgroundColor: 'rgb(0,128,0, 0.1)'\r\n  },\r\n  deaths: {\r\n    borderBottom: '20px solid red',\r\n    color: 'red',\r\n    backgroundColor: 'rgb(255, 0, 0, 0.1)'\r\n  },\r\n  tables: {\r\n    maxHeight: '240px',\r\n    width: '100% !important',\r\n  },\r\n  more: {\r\n    alignItems: 'center'\r\n  }\r\n});\r\n\r\nconst Cards = ({ data }) => {\r\n  const totalInfected = parseInt(data.totalConfirmed);\r\n  const totalRecovered = parseInt(data.totalRecovered);\r\n  const totalDeaths = parseInt(data.totalDeaths);\r\n  const totalActive = parseInt(data.totalActiveCases);\r\n\r\n  const styles = useStyles();\r\n\r\n  const [tdyData, setTdyData] = useState([]);\r\n  const [ytdData, setYtdData] = useState([]);\r\n\r\n  const columns = [\r\n    { id: \"country\", label: \"Country\" },\r\n    { id: \"todayCases\", label: \"Newly Confirmed\" },\r\n    { id: \"todayDeaths\", label: \"New Deaths\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const fetchedAPI = await fetchWorldTdyYtd();\r\n      const { today } = fetchedAPI;\r\n      const { yesterday } = fetchedAPI;\r\n      setTdyData(today);\r\n      setYtdData(yesterday);\r\n    }\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const topDailyBar = (\r\n    tdyData ? (\r\n      <HorizontalBar\r\n        data={{\r\n          labels: tdyData.map(items => items.country),\r\n          datasets: [\r\n            {\r\n              label: 'New Cases',\r\n              backgroundColor: 'rgba(0,255,127, 0.5)',\r\n              data: tdyData.map(items => items.todayCases),\r\n            },\r\n            {\r\n              label: 'Deaths',\r\n              backgroundColor: 'rgba(0, 0, 225, 0.5)',\r\n              data: tdyData.map(items => items.todayDeaths),\r\n            }\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: true },\r\n          scales: {\r\n            xAxes: [{\r\n              stacked: true,\r\n            }],\r\n            yAxes: [{\r\n              stacked: true\r\n            }]\r\n          }\r\n        }}\r\n      />\r\n    ) : <LinearProgress />\r\n  )\r\n\r\n  const topYtdBar = (\r\n    ytdData ? (\r\n      <HorizontalBar\r\n        data={{\r\n          labels: ytdData.map(items => items.country),\r\n          datasets: [\r\n            {\r\n              label: 'New Cases',\r\n              backgroundColor: 'rgb(128,0,128, 0.5)',\r\n              data: ytdData.map(items => items.todayCases),\r\n            },\r\n            {\r\n              label: 'Deaths',\r\n              backgroundColor: 'yellow',\r\n              data: ytdData.map(items => items.todayDeaths),\r\n            }\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: true },\r\n          scales: {\r\n            xAxes: [{\r\n              stacked: true,\r\n            }],\r\n            yAxes: [{\r\n              stacked: true\r\n            }]\r\n          }\r\n        }}\r\n      />\r\n    ) : <LinearProgress />\r\n  )\r\n\r\n  if (!totalInfected) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div >\r\n      <Grid container spacing={3} justify='center' borderRadius={16}>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography gutterBottom>Confirmed</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalInfected} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography gutterBottom>Recovered</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalRecovered} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.active)}>\r\n          <CardContent>\r\n            <Typography gutterBottom>Active</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalActive} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography gutterBottom>Deaths</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalDeaths} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n      <Paper elevation={0} className={styles.root}>\r\n        <Typography variant='h5' color='textSecondary' gutterBottom style={{ textAlign: 'center' }}>Top 10 Today <span role=\"img\" aria-label=\"grinning face\" id=\"rise trend\">📈</span></Typography>\r\n        <Grid container spacing={3} justify='center'>\r\n          <Grid item>\r\n            <TableContainer className={styles.tables}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((column) => (\r\n                      <TableCell key={column.id}>{column.label}</TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {tdyData.map((row) => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.country}\r\n                      >\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id}>{value.toLocaleString()}</TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Grid>\r\n          <div className={styles.container}>\r\n            <Grid item>\r\n              {topDailyBar}\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n      </Paper>\r\n      <Paper elevation={0} className={styles.root}>\r\n        <Typography variant='h5' color='textSecondary' gutterBottom style={{ textAlign: 'center' }}>Top 10 Yesterday <span role=\"img\" aria-label=\"grinning face\" id=\"rise trend\">📈</span></Typography>\r\n        <Grid container spacing={3} justify='center'>\r\n          <Grid item>\r\n            <TableContainer className={styles.tables}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((column) => (\r\n                      <TableCell key={column.id}>{column.label}</TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {ytdData.map((row) => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.country}\r\n                      >\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id}>{value.toLocaleString()}</TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Grid>\r\n          <div className={styles.container}>\r\n            <Grid item>\r\n              {topYtdBar}\r\n            </Grid>\r\n          </div>\r\n          <Grid item>\r\n            <Typography variant='button' ><Button color='secondary' className={styles.more} href='#/toptensummary'>Comparison Tables Click Here</Button></Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default Cards;","import React, { useState, useEffect } from 'react';\r\nimport { Line, Doughnut } from 'react-chartjs-2';\r\nimport { Typography, Card, Grid, Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { fetchWorldDailyData } from '../../api-handler/index';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    display: 'flexbox',\r\n    textAlign: 'center',\r\n    width: '80%',\r\n    justifyItems: 'center',\r\n  },\r\n  card: {\r\n    padding: '2%',\r\n    width: '50%',\r\n    marginTop: '0% !important',\r\n    backgroundColor: 'rgb(92, 219, 149, 0.1)',\r\n    borderRadius: '12px',\r\n  },\r\n  card1: {\r\n    padding: '2%',\r\n    width: '50%',\r\n    marginTop: '0% !important',\r\n    backgroundColor: 'rgb(92, 219, 149, 0.1)',\r\n    borderRadius: '12px',\r\n  },\r\n  root: {\r\n    marginTop: '0.5%',\r\n    marginLeft: '10%',\r\n    width: '80%',\r\n\r\n  },\r\n  more: {\r\n    backgroundColor: 'rgb(92, 219, 149, 0.2)'\r\n  }\r\n})\r\n\r\nconst mockData = {\r\n  \"cases\": {\r\n    \"3/21/20\": 304507,\r\n    \"3/22/20\": 336953,\r\n    \"3/23/20\": 378231,\r\n    \"3/24/20\": 418041,\r\n    \"3/25/20\": 467653,\r\n    \"3/26/20\": 529591,\r\n    \"3/27/20\": 593291,\r\n    \"3/28/20\": 660693,\r\n    \"3/29/20\": 720140,\r\n    \"3/30/20\": 782389,\r\n    \"3/31/20\": 857487,\r\n    \"4/1/20\": 932605,\r\n    \"4/2/20\": 1013466,\r\n    \"4/3/20\": 1095917,\r\n    \"4/4/20\": 1176060,\r\n    \"4/5/20\": 1249754,\r\n    \"4/6/20\": 1321481,\r\n    \"4/7/20\": 1396476,\r\n    \"4/8/20\": 1480202,\r\n    \"4/9/20\": 1565278,\r\n    \"4/10/20\": 1657526,\r\n    \"4/11/20\": 1735650,\r\n    \"4/12/20\": 1834721,\r\n    \"4/13/20\": 1904838,\r\n    \"4/14/20\": 1976191,\r\n    \"4/15/20\": 2056054,\r\n    \"4/16/20\": 2152437,\r\n    \"4/17/20\": 2240190,\r\n    \"4/18/20\": 2317758,\r\n    \"4/19/20\": 2401378\r\n  },\r\n  \"deaths\": {\r\n    \"3/21/20\": 12973,\r\n    \"3/22/20\": 14651,\r\n    \"3/23/20\": 16505,\r\n    \"3/24/20\": 18625,\r\n    \"3/25/20\": 21181,\r\n    \"3/26/20\": 23970,\r\n    \"3/27/20\": 27198,\r\n    \"3/28/20\": 30652,\r\n    \"3/29/20\": 33925,\r\n    \"3/30/20\": 37582,\r\n    \"3/31/20\": 42107,\r\n    \"4/1/20\": 47180,\r\n    \"4/2/20\": 52983,\r\n    \"4/3/20\": 58787,\r\n    \"4/4/20\": 64606,\r\n    \"4/5/20\": 69374,\r\n    \"4/6/20\": 74565,\r\n    \"4/7/20\": 81937,\r\n    \"4/8/20\": 88338,\r\n    \"4/9/20\": 95521,\r\n    \"4/10/20\": 102525,\r\n    \"4/11/20\": 108502,\r\n    \"4/12/20\": 114090,\r\n    \"4/13/20\": 119481,\r\n    \"4/14/20\": 125983,\r\n    \"4/15/20\": 134176,\r\n    \"4/16/20\": 143800,\r\n    \"4/17/20\": 153821,\r\n    \"4/18/20\": 159509,\r\n    \"4/19/20\": 165043\r\n  },\r\n  \"recovered\": {\r\n    \"3/21/20\": 91682,\r\n    \"3/22/20\": 97889,\r\n    \"3/23/20\": 98341,\r\n    \"3/24/20\": 107890,\r\n    \"3/25/20\": 113604,\r\n    \"3/26/20\": 121966,\r\n    \"3/27/20\": 130659,\r\n    \"3/28/20\": 138949,\r\n    \"3/29/20\": 148616,\r\n    \"3/30/20\": 164100,\r\n    \"3/31/20\": 176442,\r\n    \"4/1/20\": 191853,\r\n    \"4/2/20\": 208528,\r\n    \"4/3/20\": 223621,\r\n    \"4/4/20\": 243575,\r\n    \"4/5/20\": 257000,\r\n    \"4/6/20\": 273259,\r\n    \"4/7/20\": 296263,\r\n    \"4/8/20\": 324507,\r\n    \"4/9/20\": 348813,\r\n    \"4/10/20\": 370241,\r\n    \"4/11/20\": 395521,\r\n    \"4/12/20\": 414599,\r\n    \"4/13/20\": 440897,\r\n    \"4/14/20\": 466051,\r\n    \"4/15/20\": 502053,\r\n    \"4/16/20\": 532409,\r\n    \"4/17/20\": 557798,\r\n    \"4/18/20\": 581355,\r\n    \"4/19/20\": 612056\r\n  }\r\n}\r\n\r\nconst Charts = ({ data }) => {\r\n  const [worldDailyData, setWorldData] = useState([]);\r\n\r\n  const totalInfected = parseInt(data.totalConfirmed);\r\n  const totalRecovered = parseInt(data.totalRecovered);\r\n  const totalDeaths = parseInt(data.totalDeaths);\r\n  const totalActive = parseInt(data.totalActiveCases);\r\n  const total = totalInfected + totalDeaths + totalRecovered;\r\n  const styles = useStyles();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setWorldData(await fetchWorldDailyData());\r\n    }\r\n    fetchData();\r\n  }, [])\r\n  console.log(worldDailyData)\r\n\r\n  const worldBreakdown = (\r\n    totalInfected ? (\r\n      <Doughnut\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths', 'Active'],\r\n          datasets: [{\r\n            data: [totalInfected, totalRecovered, totalDeaths, totalActive],\r\n            backgroundColor: [\"rgb(255, 99, 132)\", \"rgb(54, 162, 235)\", \"rgb(255, 205, 86)\", \"rgb(0, 225, 0, 0.5)\"]\r\n          }],\r\n\r\n        }}\r\n      />\r\n    ) : null\r\n  )\r\n\r\n  const worldLineGraph = (\r\n    30\r\n      ? (<Line\r\n        data={{\r\n          labels: Object.keys(mockData.cases).map(items => new Date(items).toDateString()),\r\n          datasets: [{\r\n            data: Object.values(mockData.cases).map(items => items),\r\n            label: 'Confirmed',\r\n            borderColor: '#FFA500',\r\n            backgroundColor: 'rgba(255,165,0, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: Object.values(mockData.deaths).map(items => items),\r\n            label: 'Deaths',\r\n            borderColor: '#FF0000',\r\n            backgroundColor: 'rgba(255,0,0, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: Object.values(mockData.recovered).map(items => {\r\n              return items;\r\n            }),\r\n            label: 'Recovered',\r\n            borderColor: '#00FF7F',\r\n            backgroundColor: 'rgba(0,255,127, 0.3)',\r\n            fill: 'origin'\r\n          },]\r\n        }}\r\n        options={{\r\n          maintainAspectRatio: true,\r\n          responsive: true,\r\n          scales: {\r\n            xAxes: [{\r\n              type: 'time',\r\n              ticks: {\r\n                autoSkip: true,\r\n                maxTicksLimit: 3\r\n              }\r\n            }],\r\n            yAxes: [{\r\n              ticks: {\r\n                maxTicksLimit: 4\r\n              }\r\n            }]\r\n          }\r\n        }} />)\r\n      : null\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Paper elevation={0} className={styles.root}>\r\n        <Grid xs={12} lg={12} container justify='center' direction='row'>\r\n          <Grid item component={Card} className={styles.card}>\r\n            <Typography variant='button' align='center'>Work in Progess (Old Figures)</Typography>\r\n            {worldLineGraph}\r\n          </Grid>\r\n          <Grid item component={Card} className={styles.card1}>\r\n            <Typography variant='button' align='center'>Breakdown</Typography>\r\n            {worldBreakdown}\r\n            <Typography variant='button' align='center'>Death Rate: {(totalDeaths / total * 100).toFixed(2)}%</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Charts;","import React from 'react';\r\nimport Cards from './Components/Cards/Cards';\r\nimport Charts from './Components/Charts/Charts';\r\nimport TopBar from './Components/TopBar/TopBar';\r\n\r\nimport { fetchData } from './api-handler/index';\r\n\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    data: {},\r\n    dataDynamic: {},\r\n    date: '',\r\n    country: '',\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n    console.log(fetchedData)\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { data } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='container'>\r\n          <TopBar />\r\n          <Cards data={data} />\r\n          <Charts data={data} />\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n};\r\n\r\nexport default App;\r\n","import React, { useState, useEffect, forwardRef } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Paper,\r\n  LinearProgress,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport MaterialTable from 'material-table';\r\n\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport { fetchWorldTdyYtd } from \"../../api-handler/index\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 530,\r\n    backgroundColor: 'rgb(92, 219, 149, 0.1)'\r\n  },\r\n  card: {\r\n    backgroundColor: 'rgb(92, 219, 149, 0.1)'\r\n  },\r\n  more: {\r\n    alignItems: 'center'\r\n  }\r\n});\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst TopTenTables = () => {\r\n  const styles = useStyles();\r\n  const [tdyData, setTdyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const fetchedAPI = await fetchWorldTdyYtd();\r\n      const { today } = fetchedAPI;\r\n      setTdyData(today);\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const columns = [\r\n    { field: \"country\", title: \"Country\" },\r\n    { field: \"cases\", title: \"Total Cases\", customSort: (a, b) => parseInt(a.cases.replace(/,/g, \"\")) - parseInt(b.cases.replace(/,/g, \"\")) },\r\n    { field: \"todayCases\", title: \"New Cases\", customSort: (a, b) => parseInt(a.todayCases.replace(/,/g, \"\")) - parseInt(b.todayCases.replace(/,/g, \"\")) },\r\n    { field: \"deaths\", title: \"Total Deaths\", customSort: (a, b) => parseInt(a.deaths.replace(/,/g, \"\")) - parseInt(b.deaths.replace(/,/g, \"\")) },\r\n    { field: \"recovered\", title: \"Total Recovered\", customSort: (a, b) => parseInt(a.recovered.replace(/,/g, \"\")) - parseInt(b.recovered.replace(/,/g, \"\")) },\r\n    { field: \"todayRecovered\", title: \"New Recovered\", customSort: (a, b) => parseInt(a.todayRecovered.replace(/,/g, \"\")) - parseInt(b.todayRecovered.replace(/,/g, \"\")) },\r\n    { field: \"active\", title: \"Active\", customSort: (a, b) => parseInt(a.active.replace(/,/g, \"\")) - parseInt(b.active.replace(/,/g, \"\")) },\r\n    { field: \"casesPerOneMillion\", title: \"Cases per million\", customSort: (a, b) => parseInt(a.casesPerOneMillion.replace(/,/g, \"\")) - parseInt(b.casesPerOneMillion.replace(/,/g, \"\")) },\r\n    { field: \"deathsPerOneMillion\", title: \"Deaths per million\", customSort: (a, b) => parseInt(a.deathsPerOneMillion.replace(/,/g, \"\")) - parseInt(b.deathsPerOneMillion.replace(/,/g, \"\")) },\r\n    { field: \"population\", title: \"Total Population\", customSort: (a, b) => parseInt(a.population.replace(/,/g, \"\")) - parseInt(b.population.replace(/,/g, \"\")) },\r\n    { field: \"continent\", title: \"Continent\" }\r\n  ];\r\n\r\n  if (!tdyData.map(item => item.country)) {\r\n    return (\r\n      <LinearProgress />\r\n    )\r\n  }\r\n\r\n  var dataSet = tdyData;\r\n  const mapData = (dataSet) => {\r\n    dataSet.map(item => {\r\n      item.country = item.country.toLocaleString()\r\n      item.cases = item.cases.toLocaleString()\r\n      item.todayCases = item.todayCases.toLocaleString()\r\n      item.deaths = item.deaths.toLocaleString()\r\n      item.recovered = item.recovered.toLocaleString()\r\n      item.todayRecovered = item.todayRecovered.toLocaleString()\r\n      item.active = item.active.toLocaleString()\r\n      item.casesPerOneMillion = item.casesPerOneMillion.toLocaleString()\r\n      item.deathsPerOneMillion = item.deathsPerOneMillion.toLocaleString()\r\n      item.population = item.population.toLocaleString()\r\n      item.continent = item.continent.toLocaleString()\r\n      return item;\r\n    })\r\n  }\r\n  mapData(dataSet);\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <Paper className={styles.root}>\r\n        <Grid spacing={3} align=\"center\">\r\n          <Grid item>\r\n            <Button color='secondary' className={styles.more} href='#/toptensummary'>Today</Button>\r\n            <Button color='secondary' className={styles.more} href='#/toptensummaryytd'>Yesterday</Button>\r\n            <Button color='secondary' className={styles.more} href='#/'>Home</Button>\r\n          </Grid>\r\n          <Grid item component={Card} className={styles.card}>\r\n            <CardContent>\r\n              <MaterialTable\r\n                icons={tableIcons}\r\n                columns={columns}\r\n                title={window.location.hash === \"#/toptensummary\" ? \"Today's Summary\" : \"Yesterday's Summary\"}\r\n                data={dataSet}\r\n                options={{\r\n                  sorting: true,\r\n                }}\r\n              />\r\n            </CardContent>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TopTenTables;","import React, { useState, useEffect, forwardRef } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Paper,\r\n  LinearProgress,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport MaterialTable from 'material-table';\r\n\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport { fetchWorldTdyYtd } from \"../../api-handler/index\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 530,\r\n    backgroundColor: 'rgb(92, 219, 149, 0.1)'\r\n  },\r\n  card: {\r\n    backgroundColor: 'rgb(92, 219, 149, 0.1)'\r\n  },\r\n});\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst TablesYtd = () => {\r\n  const styles = useStyles();\r\n  const [ytdData, setYtdData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const fetchedAPI = await fetchWorldTdyYtd();\r\n      const { yesterdayAll } = fetchedAPI;\r\n      setYtdData(yesterdayAll);\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const columns = [\r\n    { field: \"country\", title: \"Country\" },\r\n    { field: \"cases\", title: \"Total Cases\", customSort: (a, b) => parseInt(a.cases.replace(/,/g, \"\")) - parseInt(b.cases.replace(/,/g, \"\")) },\r\n    { field: \"todayCases\", title: \"New Cases\", customSort: (a, b) => parseInt(a.todayCases.replace(/,/g, \"\")) - parseInt(b.todayCases.replace(/,/g, \"\")) },\r\n    { field: \"deaths\", title: \"Total Deaths\", customSort: (a, b) => parseInt(a.deaths.replace(/,/g, \"\")) - parseInt(b.deaths.replace(/,/g, \"\")) },\r\n    { field: \"recovered\", title: \"Total Recovered\", customSort: (a, b) => parseInt(a.recovered.replace(/,/g, \"\")) - parseInt(b.recovered.replace(/,/g, \"\")) },\r\n    { field: \"todayRecovered\", title: \"New Recovered\", customSort: (a, b) => parseInt(a.todayRecovered.replace(/,/g, \"\")) - parseInt(b.todayRecovered.replace(/,/g, \"\")) },\r\n    { field: \"active\", title: \"Active\", customSort: (a, b) => parseInt(a.active.replace(/,/g, \"\")) - parseInt(b.active.replace(/,/g, \"\")) },\r\n    { field: \"casesPerOneMillion\", title: \"Cases per million\", customSort: (a, b) => parseInt(a.casesPerOneMillion.replace(/,/g, \"\")) - parseInt(b.casesPerOneMillion.replace(/,/g, \"\")) },\r\n    { field: \"deathsPerOneMillion\", title: \"Deaths per million\", customSort: (a, b) => parseInt(a.deathsPerOneMillion.replace(/,/g, \"\")) - parseInt(b.deathsPerOneMillion.replace(/,/g, \"\")) },\r\n    { field: \"population\", title: \"Total Population\", customSort: (a, b) => parseInt(a.population.replace(/,/g, \"\")) - parseInt(b.population.replace(/,/g, \"\")) },\r\n    { field: \"continent\", title: \"Continent\" }\r\n  ];\r\n\r\n  if (!ytdData.map(item => item.country)) {\r\n    return (\r\n      <LinearProgress />\r\n    )\r\n  }\r\n\r\n  var dataSet = ytdData;\r\n  const mapData = (dataSet) => {\r\n    dataSet.map(item => {\r\n      item.country = item.country.toLocaleString()\r\n      item.cases = item.cases.toLocaleString()\r\n      item.todayCases = item.todayCases.toLocaleString()\r\n      item.deaths = item.deaths.toLocaleString()\r\n      item.recovered = item.recovered.toLocaleString()\r\n      item.todayRecovered = item.todayRecovered.toLocaleString()\r\n      item.active = item.active.toLocaleString()\r\n      item.casesPerOneMillion = item.casesPerOneMillion.toLocaleString()\r\n      item.deathsPerOneMillion = item.deathsPerOneMillion.toLocaleString()\r\n      item.population = item.population.toLocaleString()\r\n      item.continent = item.continent.toLocaleString()\r\n      return item;\r\n    })\r\n  }\r\n  mapData(dataSet);\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <Paper className={styles.root}>\r\n        <Grid spacing={3} align=\"center\">\r\n          <Grid item component={Card} className={styles.card}>\r\n            <Grid item>\r\n              <Button color='secondary' className={styles.more} href='#/summary'>Today</Button>\r\n              <Button color='secondary' className={styles.more} href='#/ytdsummary'>Yesterday</Button>\r\n              <Button color='secondary' className={styles.more} href='#/'>Home</Button>\r\n            </Grid>\r\n            <CardContent>\r\n              <MaterialTable\r\n                icons={tableIcons}\r\n                columns={columns}\r\n                title={window.location.hash === \"#/summary\" ? \"Today's Summary\" : \"Yesterday's Summary\"}\r\n                data={dataSet}\r\n                options={{\r\n                  sorting: true,\r\n                }}\r\n              />\r\n            </CardContent>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TablesYtd;","import React, { useState, useEffect, forwardRef } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Paper,\r\n  LinearProgress,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport MaterialTable from 'material-table';\r\n\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport { fetchWorldTdyYtd } from \"../../api-handler/index\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 530,\r\n    backgroundColor: 'rgb(92, 219, 149, 0.1)'\r\n  },\r\n  card: {\r\n    backgroundColor: 'rgb(92, 219, 149, 0.1)'\r\n  },\r\n});\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nconst TopTenYtd = () => {\r\n  const styles = useStyles();\r\n  const [ytdData, setYtdData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const fetchedAPI = await fetchWorldTdyYtd();\r\n      const { yesterday } = fetchedAPI;\r\n      setYtdData(yesterday);\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const columns = [\r\n    { field: \"country\", title: \"Country\" },\r\n    { field: \"cases\", title: \"Total Cases\", customSort: (a, b) => parseInt(a.cases.replace(/,/g, \"\")) - parseInt(b.cases.replace(/,/g, \"\")) },\r\n    { field: \"todayCases\", title: \"New Cases\", customSort: (a, b) => parseInt(a.todayCases.replace(/,/g, \"\")) - parseInt(b.todayCases.replace(/,/g, \"\")) },\r\n    { field: \"deaths\", title: \"Total Deaths\", customSort: (a, b) => parseInt(a.deaths.replace(/,/g, \"\")) - parseInt(b.deaths.replace(/,/g, \"\")) },\r\n    { field: \"recovered\", title: \"Total Recovered\", customSort: (a, b) => parseInt(a.recovered.replace(/,/g, \"\")) - parseInt(b.recovered.replace(/,/g, \"\")) },\r\n    { field: \"todayRecovered\", title: \"New Recovered\", customSort: (a, b) => parseInt(a.todayRecovered.replace(/,/g, \"\")) - parseInt(b.todayRecovered.replace(/,/g, \"\")) },\r\n    { field: \"active\", title: \"Active\", customSort: (a, b) => parseInt(a.active.replace(/,/g, \"\")) - parseInt(b.active.replace(/,/g, \"\")) },\r\n    { field: \"casesPerOneMillion\", title: \"Cases per million\", customSort: (a, b) => parseInt(a.casesPerOneMillion.replace(/,/g, \"\")) - parseInt(b.casesPerOneMillion.replace(/,/g, \"\")) },\r\n    { field: \"deathsPerOneMillion\", title: \"Deaths per million\", customSort: (a, b) => parseInt(a.deathsPerOneMillion.replace(/,/g, \"\")) - parseInt(b.deathsPerOneMillion.replace(/,/g, \"\")) },\r\n    { field: \"population\", title: \"Total Population\", customSort: (a, b) => parseInt(a.population.replace(/,/g, \"\")) - parseInt(b.population.replace(/,/g, \"\")) },\r\n    { field: \"continent\", title: \"Continent\" }\r\n  ];\r\n\r\n  if (!ytdData.map(item => item.country)) {\r\n    return (\r\n      <LinearProgress />\r\n    )\r\n  }\r\n\r\n  var dataSet = ytdData;\r\n  const mapData = (dataSet) => {\r\n    dataSet.map(item => {\r\n      item.country = item.country.toLocaleString()\r\n      item.cases = item.cases.toLocaleString()\r\n      item.todayCases = item.todayCases.toLocaleString()\r\n      item.deaths = item.deaths.toLocaleString()\r\n      item.recovered = item.recovered.toLocaleString()\r\n      item.todayRecovered = item.todayRecovered.toLocaleString()\r\n      item.active = item.active.toLocaleString()\r\n      item.casesPerOneMillion = item.casesPerOneMillion.toLocaleString()\r\n      item.deathsPerOneMillion = item.deathsPerOneMillion.toLocaleString()\r\n      item.population = item.population.toLocaleString()\r\n      item.continent = item.continent.toLocaleString()\r\n      return item;\r\n    })\r\n  }\r\n  mapData(dataSet);\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <Paper className={styles.root}>\r\n        <Grid spacing={3} align=\"center\">\r\n          <Grid item>\r\n            <Button color='secondary' className={styles.more} href='#/toptensummary'>Today</Button>\r\n            <Button color='secondary' className={styles.more} href='#/toptensummaryytd'>Yesterday</Button>\r\n            <Button color='secondary' className={styles.more} href='#/'>Home</Button>\r\n          </Grid>\r\n          <Grid item component={Card} className={styles.card}>\r\n            <CardContent>\r\n              <MaterialTable\r\n                icons={tableIcons}\r\n                columns={columns}\r\n                title={window.location.hash === \"#/toptensummary\" ? \"Today's Summary\" : \"Yesterday's Summary\"}\r\n                data={dataSet}\r\n                options={{\r\n                  sorting: true,\r\n                }}\r\n              />\r\n            </CardContent>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TopTenYtd;","import React, { useState, useEffect } from 'react';\r\nimport { Map, CircleMarker, Popup, TileLayer } from 'react-leaflet';\r\n\r\nimport { fetchLocationData } from '../../api-handler/index';\r\nimport TopBar from '../TopBar/TopBar';\r\n\r\nimport './globe.css';\r\n\r\nconst Globe = () => {\r\n  const [locData, setLocData] = useState([]);\r\n  const [location, setLocation] = useState(false);\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const fetchedData = await fetchLocationData();\r\n      setLocData(fetchedData);\r\n    }\r\n    fetchAPI();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <Map center={[8, 0]} zoom={2.3}>\r\n        <TileLayer\r\n          url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        {locData.slice(0, 10).map(item =>\r\n          <CircleMarker\r\n            key={item.countryInfo._id}\r\n            center={[\r\n              item.countryInfo.lat,\r\n              item.countryInfo.long\r\n            ]}\r\n            onClick={() => setLocation(item)}\r\n            radius={24}\r\n            color={'red'}\r\n          />\r\n        )}\r\n        {locData.slice(10, 20).map(item =>\r\n          <CircleMarker\r\n            key={item.countryInfo._id}\r\n            center={[\r\n              item.countryInfo.lat,\r\n              item.countryInfo.long\r\n            ]}\r\n            onClick={() => setLocation(item)}\r\n            radius={14}\r\n            color={'orange'}\r\n          />\r\n        )}\r\n        {locData.slice(20, locData.length + 1).map(item =>\r\n          <CircleMarker\r\n            key={item.countryInfo._id}\r\n            center={[\r\n              item.countryInfo.lat,\r\n              item.countryInfo.long\r\n            ]}\r\n            onClick={() => setLocation(item)}\r\n            radius={8}\r\n            color={'green'}\r\n          />\r\n\r\n        )}\r\n\r\n        {location && (\r\n          <Popup\r\n            position={[\r\n              location.countryInfo.lat,\r\n              location.countryInfo.long\r\n            ]}\r\n            onClose={() => setLocation(false)}\r\n          >\r\n            <div>\r\n              <h2>{location.country}</h2>\r\n              <p>Cases:&nbsp;{location.cases.toLocaleString()}</p>\r\n              <p>Deaths:&nbsp;{location.deaths.toLocaleString()}</p>\r\n              <p>Active:&nbsp;{location.active.toLocaleString()}</p>\r\n              <p>Recovered:&nbsp;{location.recovered.toLocaleString()}</p>\r\n              <p>Critical:&nbsp;{location.critical.toLocaleString()}</p>\r\n            </div>\r\n          </Popup>\r\n        )}\r\n      </Map>\r\n      <h3>Click to find out more</h3>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Globe;","import React, { useState } from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { autoPlay } from 'react-swipeable-views-utils';\r\n\r\nimport TopBar from '../TopBar/TopBar';\r\n\r\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\n\r\nconst screenshots = [\r\n  {\r\n    label: 'Overview',\r\n    imgPath:\r\n      'https://user-images.githubusercontent.com/56034480/92934048-97030880-f479-11ea-8ca3-07052987f138.jpg',\r\n  },\r\n  {\r\n    label: 'Globe View',\r\n    imgPath:\r\n      'https://user-images.githubusercontent.com/56034480/92934036-94a0ae80-f479-11ea-94d3-2614d8137e10.jpg',\r\n  },\r\n  {\r\n    label: 'Table View',\r\n    imgPath:\r\n      'https://user-images.githubusercontent.com/56034480/92934059-9a968f80-f479-11ea-830b-9d61b8180f71.jpg',\r\n  },\r\n  {\r\n    label: 'News Section',\r\n    imgPath:\r\n      'https://user-images.githubusercontent.com/56034480/92934055-98cccc00-f479-11ea-94d1-deadd2d36528.jpg',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  h1: {\r\n    margin: '8px',\r\n    fontSize: '36px'\r\n  },\r\n  h2: {\r\n    textAlign: 'justify',\r\n    marginLeft: '22%',\r\n    fontFamily: 'helvetica'\r\n  },\r\n  root: {\r\n    width: '60%',\r\n    flexGrow: 1,\r\n    marginLeft: '20%'\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    height: 50,\r\n    paddingLeft: theme.spacing(4),\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  img: {\r\n    // height: 255,\r\n    display: 'block',\r\n    // maxWidth: 900,\r\n    overflow: 'hidden',\r\n    width: '100%',\r\n    height: '100%'\r\n  }\r\n})\r\n);\r\n\r\nconst Landing = () => {\r\n  const styles = useStyles();\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const maxSteps = screenshots.length;\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleStepChange = (step) => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <h1 className={styles.h1}><span role=\"img\" aria-label=\"grinning face\" id=\"rise trend\">𝗖𝗢𝗩𝗜𝗗🦠𝗧𝗥𝗔𝗖𝗞𝗘𝗥</span></h1>\r\n      <div className={styles.root}>\r\n        <AutoPlaySwipeableViews\r\n          axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n          index={activeStep}\r\n          onChangeIndex={handleStepChange}\r\n          enableMouseEvents\r\n        >\r\n          {screenshots.map((step, index) => (\r\n            <div key={step.label}>\r\n              {Math.abs(activeStep - index) <= 2 ? (\r\n                <img className={styles.img} src={step.imgPath} alt={step.label} />\r\n              ) : null}\r\n            </div>\r\n          ))}\r\n        </AutoPlaySwipeableViews>\r\n        <Paper square elevation={0} className={styles.header}>\r\n          <Typography>{screenshots[activeStep].label}</Typography>\r\n        </Paper>\r\n        <MobileStepper\r\n          steps={maxSteps}\r\n          position=\"static\"\r\n          variant=\"text\"\r\n          activeStep={activeStep}\r\n          nextButton={\r\n            <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\r\n              Next\r\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n            </Button>\r\n          }\r\n          backButton={\r\n            <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n              {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n            Back\r\n          </Button>\r\n          }\r\n        />\r\n      </div>\r\n      <h2 className={styles.h2}>A Data Rich Dashboard&nbsp;<Button color='secondary' href='#/home'>Try it now!</Button></h2>\r\n      <div className={styles.root}>\r\n        <List column>\r\n          <ListItem button>\r\n            <ListItemText primary=\"- Interactive\" />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemText primary=\"- See yesterday's data and compare it with today\" />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemText primary=\"- Hover and click the charts to see in depth information\" />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemText primary=\"- Filter data by clicking on the legend on our charts!\" />\r\n          </ListItem>\r\n        </List>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Landing;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Tables from './Components/Tables/Tables';\r\nimport Singapore from './Components/sgData/Singapore';\r\nimport About from './Components/About/About';\r\nimport App from './App';\r\nimport TopTenTables from './Components/Tables/TopTenTables';\r\nimport TablesYtd from './Components/Tables/TablesYtd';\r\nimport TopTenYtd from './Components/Tables/TopTenYtd';\r\nimport Globe from './Components/Globe/Globe';\r\nimport Landing from './Components/LandingPage/LandingPage';\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/' component={Landing} />\r\n      <Route path='/home' component={App} />\r\n      <Route path='/summary' component={Tables} />\r\n      <Route path='/ytdsummary' component={TablesYtd} />\r\n      <Route path='/toptensummary' component={TopTenTables} />\r\n      <Route path='/toptensummaryytd' component={TopTenYtd} />\r\n      <Route path='/singapore' component={Singapore} />\r\n      <Route path='/globe' component={Globe} />\r\n      <Route path='/about' component={About} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Routes;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nimport Routes from './Route';\r\n\r\nReactDOM.render(\r\n  <HashRouter basename='/covid-dash/'>\r\n    <Routes />\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}