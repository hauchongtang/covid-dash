{"version":3,"sources":["Components/Cards/Cards.module.css","Components/Cards/Cards.jsx","api-handler/index.js","Components/Charts/Charts.jsx","Components/TopBar/TopBar.jsx","App.js","index.js","Components/Charts/Charts.module.css","App.module.css"],"names":["module","exports","Cards","data","date","totalInfected","TotalConfirmed","totalRecovered","TotalRecovered","totalDeaths","TotalDeaths","totalActive","lastUpdated","Date","toDateString","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","duration","seperator","active","recovered","deaths","fetchData","a","axios","get","response","console","log","fetchDailyData","country","variableUrl","url","fetchWorldDailyData","fetchCurrentData","confirmed","value","modifiedData","Charts","useState","dailyData","setDailyData","currentData","setCurrentData","worldDailyData","setWorldData","useEffect","worldLineGraph","length","labels","map","items","reportDate","datasets","totalConfirmed","label","borderColor","backgroundColor","fill","total","options","maintainAspectRatio","responsive","sgLineGraph","Confirmed","Deaths","Recovered","Active","sgBarGraph","legend","display","align","TopBar","root","AppBar","position","style","background","Toolbar","title","Button","onClick","window","location","href","button","App","state","dataDynamic","fetchedData","this","setState","Global","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,OAAS,sBAAsB,UAAY,yBAAyB,OAAS,wB,6OCgEnLC,EA1DD,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACfC,EAAgBF,EAAKG,eACrBC,EAAiBJ,EAAKK,eACtBC,EAAcN,EAAKO,YACnBC,EAAcN,EAAgBI,EAAcF,EAC5CK,EAAc,IAAIC,KAAKT,GAAMU,eAEnC,OAAKT,EAIH,yBAAKU,UAAWC,IAAOC,WACrB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,UAClC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOY,WAC3E,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,aACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAClB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAK9B,EAAe+B,SAAU,IAAKC,UAAU,OAElE,kBAACP,EAAA,EAAD,CAAYC,MAAM,iBAAiBnB,GACnC,kBAACkB,EAAA,EAAD,CAAYG,QAAQ,SAApB,mCAGJ,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOsB,SAC3E,kBAACT,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,UACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAClB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAKxB,EAAayB,SAAU,IAAKC,UAAU,OAEhE,kBAACP,EAAA,EAAD,CAAYC,MAAM,iBAAiBnB,GACnC,kBAACkB,EAAA,EAAD,CAAYG,QAAQ,SAApB,qCAGJ,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOuB,YAC3E,kBAACV,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,aACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAClB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAK5B,EAAgB6B,SAAU,IAAKC,UAAU,OAEnE,kBAACP,EAAA,EAAD,CAAYC,MAAM,iBAAiBnB,GACnC,kBAACkB,EAAA,EAAD,CAAYG,QAAQ,SAApB,yCAGJ,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOwB,SAC3E,kBAACX,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,UACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAClB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAK1B,EAAa2B,SAAU,IAAKC,UAAU,OAEhE,kBAACP,EAAA,EAAD,CAAYC,MAAM,iBAAiBnB,GACnC,kBAACkB,EAAA,EAAD,CAAYG,QAAQ,SAApB,qCA1CD,c,iCCbEQ,EAAS,uCAAG,4BAAAC,EAAA,sEAET,qCAFS,SAGEC,IAAMC,IADjB,sCAFS,cAGfC,EAHe,yBAIdA,EAAS1C,MAJK,gCAMrB2C,QAAQC,IAAR,MANqB,yDAAH,qDAUTC,EAAc,uCAAG,WAAOC,GAAP,mBAAAP,EAAA,6DAExBQ,EADEC,EAAM,2CAERF,IACFC,EAAW,UAAMC,EAAN,YAAaF,IAErBA,IACHC,EAAW,UAAMC,EAAN,eAPe,kBAUHR,IAAMC,IAAIM,GAVP,cAUpBL,EAVoB,yBAWnBA,EAAS1C,MAXU,kCAa1B2C,QAAQC,IAAR,MAb0B,0DAAH,sDAiBdK,EAAmB,uCAAG,4BAAAV,EAAA,sEAEnB,uCAFmB,SAGRC,IAAMC,IADjB,wCAFmB,cAGzBC,EAHyB,yBAIxBA,EAAS1C,MAJe,gCAM/B2C,QAAQC,IAAR,MAN+B,yDAAH,qDAoBnBM,EAAgB,uCAAG,oCAAAX,EAAA,sEAEhB,qDAFgB,SAGLC,IAAMC,IADjB,sDAFgB,cAGtBC,EAHsB,OAItBjB,EAAWiB,EAAS1C,KAAKmD,UAAUC,MACnChB,EAAYM,EAAS1C,KAAKoC,UAAUgB,MACpCf,EAASK,EAAS1C,KAAKqC,OAAOe,MAE9BC,EAAe,CAAE5B,WAAUW,YAAWD,OAD7BV,EAAWY,EAASD,EACiBC,UARxB,kBASrBgB,GATqB,kCAW5BV,QAAQC,IAAR,MAX4B,0DAAH,qD,iBC4FdU,EAtIA,SAAC,GAAgB,EAAdR,QAAe,IAAD,EACIS,mBAAS,IADb,mBACvBC,EADuB,KACZC,EADY,OAEQF,mBAAS,IAFjB,mBAEvBG,EAFuB,KAEVC,EAFU,OAGSJ,mBAAS,IAHlB,mBAGvBK,EAHuB,KAGPC,EAHO,KAK9BC,qBAAU,YACO,uCAAG,sBAAAvB,EAAA,kEAChBkB,EADgB,SACGZ,IADH,8CAEhBc,EAFgB,SAEKT,IAFL,8CAGhBW,EAHgB,UAGGZ,IAHH,+EAAH,qDAKfX,KACC,IAEH,IAAMyB,EACJH,EAAeI,OACV,kBAAC,OAAD,CACDhE,KAAM,CACJiE,OAAQL,EAAeM,KAAI,SAAAC,GAAK,OAAI,IAAIzD,KAAKyD,EAAMC,YAAYzD,kBAC/D0D,SAAU,CAAC,CACTrE,KAAM4D,EAAeM,KAAI,SAAAC,GAAK,OAAIA,EAAMG,kBACxCC,MAAO,YACPC,YAAa,UACbC,gBAAiB,uBACjBC,KAAM,UACL,CACD1E,KAAM4D,EAAeM,KAAI,SAAAC,GAAK,OAAIA,EAAM9B,OAAOsC,SAC/CJ,MAAO,SACPC,YAAa,UACbC,gBAAiB,qBACjBC,KAAM,UACL,CACD1E,KAAM4D,EAAeM,KAAI,SAAAC,GACvB,OAAOA,EAAMG,eAAiBH,EAAM9B,OAAOsC,SAE7CJ,MAAO,qBACPC,YAAa,UACbC,gBAAiB,wBACjBC,KAAM,YAGVE,QAAS,CACPC,qBAAqB,EACrBC,YAAY,KAEd,KAGAC,EACJvB,EAAUQ,OACL,kBAAC,OAAD,CACDhE,KAAM,CACJiE,OAAQT,EAAUU,KAAI,SAAAC,GAAK,OAAI,IAAIzD,KAAKyD,EAAMzD,MAAMC,kBACpD0D,SAAU,CAAC,CACTrE,KAAMwD,EAAUU,KAAI,SAAAC,GAAK,OAAIA,EAAMa,aACnCT,MAAO,YACPC,YAAa,UACbC,gBAAiB,uBACjBC,KAAM,UACL,CACD1E,KAAMwD,EAAUU,KAAI,SAAAC,GAAK,OAAIA,EAAMc,UACnCV,MAAO,SACPC,YAAa,UACbC,gBAAiB,qBACjBC,KAAM,UACL,CACD1E,KAAMwD,EAAUU,KAAI,SAAAC,GAAK,OAAIA,EAAMe,aACnCX,MAAO,YACPC,YAAa,UACbC,gBAAiB,uBACjBC,KAAM,UACL,CACD1E,KAAMwD,EAAUU,KAAI,SAAAC,GAAK,OAAIA,EAAMgB,UACnCZ,MAAO,SACPC,YAAa,UACbC,gBAAiB,uBACjBC,KAAM,YAGVE,QAAS,CACPC,qBAAqB,EACrBC,YAAY,KAEd,KAGAM,EACJ1B,EACE,kBAAC,gBAAD,CACE1D,KAAM,CACJiE,OAAQ,CAAC,YAAa,YAAa,SAAU,UAC7CI,SAAU,CACR,CACEE,MAAO,SACPE,gBAAiB,CAAC,uBAAwB,uBAAwB,uBAAwB,wBAC1FzE,KAAM,CAAC0D,EAAYjC,SAAUiC,EAAYtB,UAAWsB,EAAYvB,OAAQuB,EAAYrB,WAI1FuC,QAAS,CACPS,OAAQ,CAAEC,SAAS,MAGrB,KAGN,OACE,oCACE,yBAAK1E,UAAWC,IAAOC,WACrB,kBAACC,EAAA,EAAD,CAAMC,QAAS,EAAGuE,MAAM,UACtB,kBAACxE,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMR,UAAWC,IAAOW,MAC5C,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYG,QAAQ,KAAKyD,MAAM,UAA/B,6BACCxB,IAGL,kBAAChD,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMR,UAAWC,IAAOW,MAC5C,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYG,QAAQ,KAAKyD,MAAM,UAA/B,6CACCR,IAGL,kBAAChE,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMR,UAAWC,IAAOW,MAC5C,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYG,QAAQ,KAAKyD,MAAM,UAA/B,8CACCH,Q,4CCjGAI,EA9BA,WAIb,OACE,yBAAK5E,UAAWC,IAAO4E,MACrB,kBAACC,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAO,CAAEC,WAAY,YAC7C,kBAACC,EAAA,EAAD,CAAShE,QAAQ,SACf,kBAACH,EAAA,EAAD,CAAYG,QAAQ,KAAKlB,UAAWC,IAAOkF,OAA3C,iBAGA,kBAACC,EAAA,EAAD,CAAQC,QAVI,WAClBC,OAAOC,SAASC,KAAO,8CASaxF,UAAWC,IAAOwF,OAAQzE,MAAM,WAA9D,oBC0CK0E,E,4MA9CbC,MAAQ,CACNvG,KAAM,GACNwG,YAAa,GACbvG,KAAM,GACN6C,QAAS,I,kMAIiBR,I,OAApBmE,E,OACNC,KAAKC,SAAS,CAAE3G,KAAMyG,EAAYG,SAClCF,KAAKC,SAAS,CAAE1G,KAAMwG,EAAY/F,O,qIAa1B,IAEAV,EAAS0G,KAAKH,MAAdvG,KACAC,EAASyG,KAAKH,MAAdtG,KACA6C,EAAY4D,KAAKH,MAAjBzD,QAER,OACE,oCACE,kBAAC,EAAD,MACA,yBAAKlC,UAAWC,IAAOC,WACrB,kBAAC,EAAD,CAAOd,KAAMA,EAAMC,KAAMA,IAEzB,kBAAC,EAAD,CAAQ6C,QAASA,KAEnB,yBAAKlC,UAAWC,IAAOC,WACrB,kBAACa,EAAA,EAAD,CAAYG,QAAQ,KAAKyD,MAAM,UAA/B,gCACA,kBAAC5D,EAAA,EAAD,CAAYG,QAAQ,KAAKyD,MAAM,UAAS,uBAAGa,KAAK,8CAAR,UAAxC,WAAmH,uBAAGA,KAAK,qDAAR,kB,GAzC3GS,IAAMC,WCNxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U,mBCL1BrH,EAAOC,QAAU,CAAC,UAAY,0BAA0B,KAAO,uB,wCCA/DD,EAAOC,QAAU,CAAC,UAAY,yB","file":"static/js/main.b535111f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2alDK\",\"card\":\"Cards_card__2yU1P\",\"infected\":\"Cards_infected__1EFcA\",\"active\":\"Cards_active__TD9Xv\",\"recovered\":\"Cards_recovered__947st\",\"deaths\":\"Cards_deaths__2I0Ix\"};","import React from 'react'\r\nimport { Grid, Card, CardContent, Typography } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({ data, date }) => {\r\n  const totalInfected = data.TotalConfirmed;\r\n  const totalRecovered = data.TotalRecovered;\r\n  const totalDeaths = data.TotalDeaths;\r\n  const totalActive = totalInfected - totalDeaths - totalRecovered;\r\n  const lastUpdated = new Date(date).toDateString();\r\n\r\n  if (!totalInfected) {\r\n    return 'Loading...';\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify='center'>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography color='textSecondary' gutterBottom>Confirmed</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalInfected} duration={2.5} seperator=\",\" />\r\n            </Typography>\r\n            <Typography color='textSecondary'>{lastUpdated}</Typography>\r\n            <Typography variant='body2'>Number of infections globally</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.active)}>\r\n          <CardContent>\r\n            <Typography color='textSecondary' gutterBottom>Active</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalActive} duration={2.5} seperator=\",\" />\r\n            </Typography>\r\n            <Typography color='textSecondary'>{lastUpdated}</Typography>\r\n            <Typography variant='body2'>Number of active cases globally</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color='textSecondary' gutterBottom>Recovered</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalRecovered} duration={2.5} seperator=\",\" />\r\n            </Typography>\r\n            <Typography color='textSecondary'>{lastUpdated}</Typography>\r\n            <Typography variant='body2'>Number of recoveries cases globally</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color='textSecondary' gutterBottom>Deaths</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalDeaths} duration={2.5} seperator=\",\" />\r\n            </Typography>\r\n            <Typography color='textSecondary'>{lastUpdated}</Typography>\r\n            <Typography variant='body2'>Number of fatalities globally</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nexport const fetchData = async () => {\r\n  try {\r\n    const url = 'https://api.covid19api.com/summary';\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async (country) => {\r\n  const url = 'https://api.covid19api.com/total/country';\r\n  var variableUrl = url;\r\n  if (country) {\r\n    variableUrl = `${url}/${country}`;\r\n  }\r\n  if (!country) {\r\n    variableUrl = `${url}/singapore`;\r\n  }\r\n  try {\r\n    const response = await axios.get(variableUrl);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchWorldDailyData = async () => {\r\n  try {\r\n    const url = 'https://covid19.mathdro.id/api/daily';\r\n    const response = await axios.get(url)\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const countries = async () => {\r\n  try {\r\n    const url = 'https://covid19.mathdro.id/api/countries';\r\n    const response = await axios.get(url);\r\n    return response.data.countries;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchCurrentData = async () => {\r\n  try {\r\n    const url = 'https://covid19.mathdro.id/api/countries/Singapore';\r\n    const response = await axios.get(url);\r\n    const infected = response.data.confirmed.value;\r\n    const recovered = response.data.recovered.value;\r\n    const deaths = response.data.deaths.value;\r\n    const active = infected - deaths - recovered;\r\n    const modifiedData = { infected, recovered, active, deaths };\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Line, HorizontalBar } from 'react-chartjs-2';\r\nimport { Typography, CardContent, Card, Grid } from '@material-ui/core';\r\nimport { fetchDailyData, fetchWorldDailyData, fetchCurrentData } from '../../api-handler/index';\r\n\r\nimport styles from './Charts.module.css';\r\n\r\nconst Charts = ({ country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n  const [currentData, setCurrentData] = useState({});\r\n  const [worldDailyData, setWorldData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setDailyData(await fetchDailyData());\r\n      setCurrentData(await fetchCurrentData());\r\n      setWorldData(await fetchWorldDailyData());\r\n    }\r\n    fetchData();\r\n  }, [])\r\n\r\n  const worldLineGraph = (\r\n    worldDailyData.length\r\n      ? (<Line\r\n        data={{\r\n          labels: worldDailyData.map(items => new Date(items.reportDate).toDateString()),\r\n          datasets: [{\r\n            data: worldDailyData.map(items => items.totalConfirmed),\r\n            label: 'Confirmed',\r\n            borderColor: '#FFA500',\r\n            backgroundColor: 'rgba(255,165,0, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: worldDailyData.map(items => items.deaths.total),\r\n            label: 'Deaths',\r\n            borderColor: '#FF0000',\r\n            backgroundColor: 'rgba(255,0,0, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: worldDailyData.map(items => {\r\n              return items.totalConfirmed - items.deaths.total;\r\n            }),\r\n            label: 'Active / Recovered',\r\n            borderColor: '#8A2BE2',\r\n            backgroundColor: 'rgba(138,43,226, 0.3)',\r\n            fill: 'origin'\r\n          }]\r\n        }}\r\n        options={{\r\n          maintainAspectRatio: true,\r\n          responsive: true\r\n        }} />)\r\n      : null\r\n  )\r\n\r\n  const sgLineGraph = (\r\n    dailyData.length\r\n      ? (<Line\r\n        data={{\r\n          labels: dailyData.map(items => new Date(items.Date).toDateString()),\r\n          datasets: [{\r\n            data: dailyData.map(items => items.Confirmed),\r\n            label: 'Confirmed',\r\n            borderColor: '#FFA500',\r\n            backgroundColor: 'rgba(255,165,0, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: dailyData.map(items => items.Deaths),\r\n            label: 'Deaths',\r\n            borderColor: '#FF0000',\r\n            backgroundColor: 'rgba(255,0,0, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: dailyData.map(items => items.Recovered),\r\n            label: 'Recovered',\r\n            borderColor: '#00FF7F',\r\n            backgroundColor: 'rgba(0,255,127, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: dailyData.map(items => items.Active),\r\n            label: 'Active',\r\n            borderColor: '#FFFF00',\r\n            backgroundColor: 'rgba(255,255,0, 0.3)',\r\n            fill: 'origin'\r\n          }]\r\n        }}\r\n        options={{\r\n          maintainAspectRatio: true,\r\n          responsive: true\r\n        }} />)\r\n      : null\r\n  )\r\n\r\n  const sgBarGraph = (\r\n    currentData ? (\r\n      <HorizontalBar\r\n        data={{\r\n          labels: ['Confirmed', 'Recovered', 'Active', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(255,165,0, 0.5)', 'rgba(0,255,127, 0.5)', 'rgba(255,255,0, 0.5)', 'rgba(255, 0, 0, 0.3)'],\r\n              data: [currentData.infected, currentData.recovered, currentData.active, currentData.deaths],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false }\r\n        }}\r\n      />\r\n    ) : null\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <Grid spacing={3} align='center'>\r\n          <Grid item component={Card} className={styles.card}>\r\n            <CardContent>\r\n              <Typography variant='h5' align='center'>World Trends 🌎</Typography>\r\n              {worldLineGraph}\r\n            </CardContent>\r\n          </Grid>\r\n          <Grid item component={Card} className={styles.card}>\r\n            <CardContent>\r\n              <Typography variant='h5' align='center'>Singapore Trends 🇸🇬</Typography>\r\n              {sgLineGraph}\r\n            </CardContent>\r\n          </Grid>\r\n          <Grid item component={Card} className={styles.card}>\r\n            <CardContent>\r\n              <Typography variant='h5' align='center'>Singapore Summary 🇸🇬</Typography>\r\n              {sgBarGraph}\r\n            </CardContent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Charts;","import React from 'react';\r\nimport { AppBar, Toolbar, Typography, IconButton, Button, MenuIcon, Link } from '@material-ui/core'\r\n\r\nimport styles from './TopBar.module.css';\r\n\r\nconst TopBar = () => {\r\n  const handleClick = () => {\r\n    window.location.href = \"https://thchong-code.github.io/covid-dash/\";\r\n  }\r\n  return (\r\n    <div className={styles.root}>\r\n      <AppBar position=\"static\" style={{ background: '#639ACE' }}>\r\n        <Toolbar variant='dense'>\r\n          <Typography variant=\"h6\" className={styles.title}>\r\n            COVID-19-DASH\r\n        </Typography>\r\n          <Button onClick={handleClick} className={styles.button} color=\"inherit\">🔄</Button>\r\n          {/* <Button>\r\n            <Link\r\n              component=\"button\"\r\n              variant=\"body-2\"\r\n              onClick={() => {\r\n                console.info(\"I'm a button.\");\r\n              }}\r\n            >\r\n              Summary\r\n      </Link>\r\n          </Button> */}\r\n        </Toolbar>\r\n\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TopBar;","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport styles from './App.module.css';\nimport Cards from './Components/Cards/Cards';\nimport Charts from './Components/Charts/Charts';\nimport TopBar from './Components/TopBar/TopBar';\n// import Country from './Components/Country/Country';\n\nimport { fetchData } from './api-handler/index';\n\nclass App extends React.Component {\n\n  state = {\n    data: {},\n    dataDynamic: {},\n    date: '',\n    country: '',\n  }\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData.Global });\n    this.setState({ date: fetchedData.Date });\n  }\n\n  // handleCountryChange = async (country) => {\n  //   if (!country) {\n  //     await fetchDailyData();\n  //   } else {\n  //     await fetchDailyData(country);\n  //   }\n  //   console.log(country)\n  //   this.setState({ country: country });\n  // }\n\n  render() {\n\n    const { data } = this.state;\n    const { date } = this.state;\n    const { country } = this.state;\n\n    return (\n      <>\n        <TopBar />\n        <div className={styles.container}>\n          <Cards data={data} date={date} />\n          {/* <Country handleCountryChange={this.handleCountryChange} /> */}\n          <Charts country={country} />\n        </div>\n        <div className={styles.container}>\n          <Typography variant='h6' align='center'>Made with React and chart.js</Typography>\n          <Typography variant='h6' align='center'><a href='https://github.com/thchong-code/covid-dash'>GitHub</a>&nbsp;&nbsp;<a href='https://thchong-code.github.io/portfolio-webpage/'>Website</a></Typography>\n        </div>\n      </>\n    )\n  }\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__1Y8uv\",\"card\":\"Charts_card__1_Yrv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3Cyev\"};"],"sourceRoot":""}