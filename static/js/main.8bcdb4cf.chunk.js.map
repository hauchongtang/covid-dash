{"version":3,"sources":["Components/TopBar/TopBar.jsx","api-handler/index.js","Components/Tables/Tables.jsx","Components/Cards/SGCards.jsx","Components/sgData/Singapore.jsx","Components/News/News.jsx","Components/Cards/Cards.jsx","Components/Charts/Charts.jsx","App.js","Route.js","index.js"],"names":["useStyles","makeStyles","root","display","TopBar","styles","AppBar","position","color","elevation","Toolbar","Grid","justify","container","spacing","item","Button","href","className","button","Typography","variant","size","fetchData","a","axios","get","response","data","console","log","fetchDailyData","country","variableUrl","url","fetchWorldDailyData","reverse","fetchCurrentData","infected","confirmed","value","recovered","deaths","modifiedData","active","fetchSummaryData","dataSet","countriesData","Countries","fetchTopNews","items","fetchTopDaily","width","paddingLeft","maxHeight","backgroundColor","card","Tables","useState","setData","useEffect","summaryData","fetchAPI","columns","id","label","map","CountryCode","Paper","align","component","Card","CardContent","TableContainer","Table","stickyHeader","aria-label","TableHead","head","TableRow","column","TableCell","key","TableBody","row","hover","role","tabIndex","LinearProgress","margin","textAlign","marginBottom","borderRadius","padding","marginTop","borderBottom","SGCards","sgData","getAPI","totalInfected","totalRecovered","totalDeaths","totalActive","xs","md","cx","gutterBottom","start","end","duration","separator","justifyContent","marginLeft","card1","Singapore","dailyData","setDailyData","currentData","setCurrentData","sgLineGraph","length","labels","Date","toDateString","datasets","Confirmed","borderColor","fill","Deaths","Recovered","Active","options","maintainAspectRatio","responsive","sgBarGraph","legend","info","alignItems","direction","borderTop","News","newsData","mapNews","index","gutterBotton","countries","countryCode","name","title","content","Link","publishedAt","toLocaleString","tables","Cards","date","parseInt","TotalConfirmed","TotalRecovered","TotalDeaths","topData","setTopData","fetchedData","topDailyBar","daily_cases","daily_deaths","scales","xAxes","stacked","yAxes","style","justifyItems","float","Charts","worldDailyData","setWorldData","worldLineGraph","last_update","total_cases","total_deaths","total_recovered","ticks","App","state","dataDynamic","this","setState","Global","React","Component","Routes","exact","path","ReactDOM","render","basename","Route","document","getElementById"],"mappings":"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","file":"static/js/main.8bcdb4cf.chunk.js","sourcesContent":["import React from 'react';\r\nimport { AppBar, Toolbar, Typography, Button, Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n})\r\n\r\nconst TopBar = () => {\r\n  const styles = useStyles();\r\n  return (\r\n    <>\r\n      <AppBar position='static' color='transparent' elevation={0}>\r\n        <Toolbar>\r\n          <Grid\r\n            justify='space-evenly'\r\n            container\r\n            spacing={3}>\r\n            <Grid item>\r\n              <Button href='#/' className={styles.button} color=\"inherit\">\r\n                <Typography variant='h6'>\r\n                  𝗖𝗢𝗩𝗜𝗗🦠𝗧𝗥𝗔𝗖𝗞𝗘𝗥\r\n            </Typography>\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button size='large' href=' #/' color='inherit'>\r\n                World\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button size='large' href=' #/singapore' color='inherit'>\r\n                Singapore\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button size='large' href=' #/summary' color='inherit'>\r\n                Summary\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button size='large' href=' #/news' color='inherit'>\r\n                News\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button size='large' href=' https://github.com/thchong-code/covid-dash' color='inherit'>\r\n                Github\r\n              </Button>\r\n            </Grid >\r\n            <Grid item>\r\n              <Button size='large' href=' https://thchong-code.github.io/portfolio-webpage/#/' color='inherit'>\r\n                Contact\r\n              </Button>\r\n            </Grid >\r\n          </Grid >\r\n        </Toolbar >\r\n      </AppBar >\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TopBar;","import axios from 'axios';\r\n\r\nexport const fetchData = async () => {\r\n  try {\r\n    const url = 'https://api.covid19api.com/summary';\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async (country) => {\r\n  const url = 'https://api.covid19api.com/total/country';\r\n  var variableUrl = url;\r\n  if (country) {\r\n    variableUrl = `${url}/${country}`;\r\n  }\r\n  if (!country) {\r\n    variableUrl = `${url}/singapore`;\r\n  }\r\n  try {\r\n    const response = await axios.get(variableUrl);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchWorldDailyData = async () => {\r\n  try {\r\n    const url = 'https://covid19-api.org/api/timeline';\r\n    const response = await axios.get(url);\r\n    return response.data.reverse();\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const countries = async () => {\r\n  try {\r\n    const url = 'https://covid19.mathdro.id/api/countries';\r\n    const response = await axios.get(url);\r\n    return response.data.countries;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchCurrentData = async () => {\r\n  try {\r\n    const url = 'https://covid19.mathdro.id/api/countries/Singapore';\r\n    const response = await axios.get(url);\r\n    const infected = response.data.confirmed.value;\r\n    const recovered = response.data.recovered.value;\r\n    const deaths = response.data.deaths.value;\r\n    const active = infected - deaths - recovered;\r\n    const modifiedData = { infected, recovered, active, deaths };\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchSummaryData = async () => {\r\n  try {\r\n    const url = 'https://api.covid19api.com/summary';\r\n    const response = await axios.get(url);\r\n    const dataSet = response.data;\r\n    const countriesData = dataSet.Countries;\r\n    return countriesData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchTopNews = async () => {\r\n  try {\r\n    const url = 'https://api.coronatracker.com/news/trending';\r\n    const response = await axios.get(url);\r\n    const dataSet = response.data.items;\r\n    return dataSet;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchTopDaily = async () => {\r\n  try {\r\n    const url = 'https://api.coronatracker.com/v3/analytics/dailyNewStats?limit=10';\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Paper,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\n\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport { fetchSummaryData } from \"../../api-handler/index\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '80%',\r\n    paddingLeft: '10%',\r\n  },\r\n  container: {\r\n    maxHeight: 530,\r\n    backgroundColor: 'rgb(175,238,238, 0.1)'\r\n  },\r\n  card: {\r\n    backgroundColor: 'rgb(175,238,238, 0.2)'\r\n  },\r\n});\r\n\r\nconst Tables = () => {\r\n  const styles = useStyles();\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const summaryData = await fetchSummaryData();\r\n      setData(summaryData);\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const columns = [\r\n    { id: \"Country\", label: \"Country\" },\r\n    { id: \"NewConfirmed\", label: \"Newly Confirmed\" },\r\n    { id: \"NewDeaths\", label: \"New Deaths\" },\r\n    { id: \"NewRecovered\", label: \"Newly Recovered\" },\r\n    { id: \"TotalConfirmed\", label: \"Confirmed\" },\r\n    { id: \"TotalDeaths\", label: \"Deaths\" },\r\n    { id: \"TotalRecovered\", label: \"Recovered\" },\r\n  ];\r\n\r\n  if (!data.map(item => item.CountryCode)) {\r\n    return (\r\n      <LinearProgress />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <Paper className={styles.root}>\r\n        <Grid spacing={3} align=\"center\">\r\n          <Grid item component={Card} className={styles.card}>\r\n            <CardContent>\r\n              <TableContainer className={styles.container}>\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                  <TableHead className={styles.head}>\r\n                    <TableRow>\r\n                      {columns.map((column) => (\r\n                        <TableCell key={column.id}>{column.label}</TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {data.map((row) => {\r\n                      return (\r\n                        <TableRow\r\n                          hover\r\n                          role=\"checkbox\"\r\n                          tabIndex={-1}\r\n                          key={row.CountryCode}\r\n                        >\r\n                          {columns.map((column) => {\r\n                            const value = row[column.id];\r\n                            return (\r\n                              <TableCell key={column.id}>{value}</TableCell>\r\n                            );\r\n                          })}\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                  <caption>Courtesy of https://api.covid19api.com</caption>\r\n                </Table>\r\n              </TableContainer>\r\n            </CardContent>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tables;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Grid, Card, CardContent, Typography } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { fetchCurrentData } from '../../api-handler';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    margin: 0,\r\n    textAlign: 'center',\r\n  },\r\n  card: {\r\n    margin: '2% !important',\r\n    marginBottom: '0% !important',\r\n    borderRadius: '12px',\r\n  },\r\n  root: {\r\n    padding: '2% !important',\r\n    margin: '10% !important',\r\n    marginTop: '4% !important',\r\n    marginBottom: '2% !important',\r\n    textAlign: 'justify',\r\n  },\r\n  infected: {\r\n    borderBottom: '20px solid orange',\r\n    color: 'orange',\r\n    backgroundColor: 'rgba(255,165,0, 0.1)',\r\n  },\r\n  active: {\r\n    borderBottom: '20px solid turquoise',\r\n    color: '#40E0D0',\r\n    backgroundColor: 'rgb(64,224,208, 0.1)'\r\n  },\r\n  recovered: {\r\n    borderBottom: '20px solid springgreen',\r\n    color: 'green',\r\n    backgroundColor: 'rgb(0,128,0, 0.1)'\r\n  },\r\n  deaths: {\r\n    borderBottom: '20px solid red',\r\n    color: 'red',\r\n    backgroundColor: 'rgb(255, 0, 0, 0.1)'\r\n  },\r\n});\r\n\r\nconst SGCards = () => {\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    const getAPI = async () => {\r\n      const sgData = await fetchCurrentData();\r\n      setData(sgData);\r\n    }\r\n    getAPI()\r\n  }, []);\r\n  const totalInfected = data.infected;\r\n  const totalRecovered = data.recovered;\r\n  const totalDeaths = data.deaths;\r\n  const totalActive = data.active;\r\n\r\n  const styles = useStyles();\r\n\r\n  if (!totalInfected) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify='center'>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography gutterBottom>Confirmed</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalInfected} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.active)}>\r\n          <CardContent>\r\n            <Typography gutterBottom>Active</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalActive} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography gutterBottom>Recovered</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalRecovered} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography gutterBottom>Deaths</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalDeaths} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SGCards;","import React, { useState, useEffect } from 'react';\r\nimport { Line, HorizontalBar } from 'react-chartjs-2';\r\nimport { Typography, CardContent, Card, Grid } from '@material-ui/core';\r\nimport { fetchDailyData, fetchCurrentData } from '../../api-handler/index';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TopBar from '../TopBar/TopBar';\r\nimport SGCards from '../Cards/SGCards';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    display: 'flexbox',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    width: '100%',\r\n    marginLeft: '10%',\r\n    marginTop: '0% !important',\r\n  },\r\n  card: {\r\n    width: '80%',\r\n    marginTop: '2% !important',\r\n    borderRadius: '12px',\r\n    backgroundColor: 'rgb(0, 0, 225, 0.1)'\r\n  },\r\n  card1: {\r\n    width: '80%',\r\n    marginTop: '1% !important',\r\n    borderRadius: '12px',\r\n    backgroundColor: 'rgb(225, 0, 0, 0.1)'\r\n  }\r\n})\r\n\r\nconst Singapore = () => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n  const [currentData, setCurrentData] = useState({});\r\n\r\n  const styles = useStyles();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setDailyData(await fetchDailyData());\r\n      setCurrentData(await fetchCurrentData());\r\n    }\r\n    fetchData();\r\n  }, [])\r\n\r\n  const sgLineGraph = (\r\n    dailyData.length\r\n      ? (<Line\r\n        data={{\r\n          labels: dailyData.map(items => new Date(items.Date).toDateString()),\r\n          datasets: [{\r\n            data: dailyData.map(items => items.Confirmed),\r\n            label: 'Confirmed',\r\n            borderColor: '#FFA500',\r\n            backgroundColor: 'rgba(255,165,0, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: dailyData.map(items => items.Deaths),\r\n            label: 'Deaths',\r\n            borderColor: '#FF0000',\r\n            backgroundColor: 'rgba(255,0,0, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: dailyData.map(items => items.Recovered),\r\n            label: 'Recovered',\r\n            borderColor: '#00FF7F',\r\n            backgroundColor: 'rgba(0,255,127, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: dailyData.map(items => items.Active),\r\n            label: 'Active',\r\n            borderColor: '#FFFF00',\r\n            backgroundColor: 'rgba(255,255,0, 0.3)',\r\n            fill: 'origin'\r\n          }]\r\n        }}\r\n        options={{\r\n          maintainAspectRatio: true,\r\n          responsive: true\r\n        }} />)\r\n      : null\r\n  )\r\n\r\n  const sgBarGraph = (\r\n    currentData ? (\r\n      <HorizontalBar\r\n        data={{\r\n          labels: ['Confirmed', 'Recovered', 'Active', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(255,165,0, 0.5)', 'rgba(0,255,127, 0.5)', 'rgba(255,255,0, 0.5)', 'rgba(255, 0, 0, 0.3)'],\r\n              data: [currentData.infected, currentData.recovered, currentData.active, currentData.deaths],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false }\r\n        }}\r\n      />\r\n    ) : null\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <div className={styles.info}>\r\n        <SGCards />\r\n      </div>\r\n      <div className={styles.container}>\r\n        <Grid alignItems='center' direction='row'>\r\n          <Grid item component={Card} className={styles.card}>\r\n            <CardContent>\r\n              <Typography variant='h5' align='center'>Singapore Trends 🇸🇬</Typography>\r\n              {sgLineGraph}\r\n            </CardContent>\r\n          </Grid>\r\n          <Grid item component={Card} className={styles.card1}>\r\n            <CardContent>\r\n              <Typography variant='h5' align='center'>Singapore Summary 🇸🇬</Typography>\r\n              {sgBarGraph}\r\n            </CardContent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Singapore;","import React, { useState, useEffect } from 'react';\r\nimport { Grid, Card, CardContent, Typography, Link, LinearProgress } from '@material-ui/core';\r\nimport { countries } from 'country-data';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport TopBar from '../TopBar/TopBar';\r\nimport { fetchTopNews } from '../../api-handler/index';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    textAlign: 'justify',\r\n  },\r\n  card: {\r\n    margin: '2% !important',\r\n    backgroundColor: 'rgb(64,224,208, 0.1)',\r\n    borderRadius: '12px',\r\n    borderTop: '12px solid rgb(64,224,208)',\r\n    width: '80%',\r\n    textAlign: 'justify'\r\n  },\r\n})\r\n\r\nconst News = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const styles = useStyles();\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const newsData = await fetchTopNews();\r\n      setData(newsData);\r\n    }\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  if (!data) {\r\n    return (\r\n      <LinearProgress />\r\n    )\r\n  }\r\n\r\n  const mapNews = data.map((items, index) => {\r\n    return (\r\n      <div>\r\n        <CardContent className={styles.card}>\r\n          <Typography variant='h6' color='textPrimary' gutterBotton>{countries[items.countryCode].name}</Typography>\r\n          <Typography variant='h6' color='primary' gutterBottom>{items.title}</Typography>\r\n          <Typography variant='body2'>{items.content}</Typography>\r\n          <Typography variant='caption'>\r\n            Source:&nbsp;\r\n            <Link href={items.url}>{items.url}</Link>\r\n          </Typography>\r\n          <Typography variant='body2'>Published:&nbsp;{new Date(items.publishedAt).toLocaleString()}</Typography>\r\n        </CardContent>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <Grid container spacing={0} align='center'>\r\n        <Grid item component={Card}>\r\n          {mapNews}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default News;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Paper,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  LinearProgress\r\n} from '@material-ui/core';\r\nimport { HorizontalBar } from 'react-chartjs-2';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport { fetchTopDaily } from '../../api-handler/index';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    textAlign: 'center',\r\n    width: '50% !important'\r\n  },\r\n  card: {\r\n    margin: '2% !important',\r\n    borderRadius: '12px',\r\n  },\r\n  root: {\r\n    margin: '2% !important',\r\n    padding: '2%',\r\n    textAlign: 'justify',\r\n    width: '76%',\r\n    marginLeft: '10% !important',\r\n    marginTop: '0% !important',\r\n    marginBottom: '0% !important',\r\n    borderRadius: '12px',\r\n    backgroundColor: 'rgb(138,43,226, 0.1)'\r\n  },\r\n  infected: {\r\n    borderBottom: '20px solid orange',\r\n    color: 'orange',\r\n    backgroundColor: 'rgba(255,165,0, 0.1)',\r\n  },\r\n  active: {\r\n    borderBottom: '20px solid turquoise',\r\n    color: '#40E0D0',\r\n    backgroundColor: 'rgb(64,224,208, 0.1)'\r\n  },\r\n  recovered: {\r\n    borderBottom: '20px solid springgreen',\r\n    color: 'green',\r\n    backgroundColor: 'rgb(0,128,0, 0.1)'\r\n  },\r\n  deaths: {\r\n    borderBottom: '20px solid red',\r\n    color: 'red',\r\n    backgroundColor: 'rgb(255, 0, 0, 0.1)'\r\n  },\r\n  tables: {\r\n    maxHeight: '240px',\r\n    width: '100% !important',\r\n  },\r\n});\r\n\r\nconst Cards = ({ data, date }) => {\r\n  const totalInfected = parseInt(data.TotalConfirmed);\r\n  const totalRecovered = parseInt(data.TotalRecovered);\r\n  const totalDeaths = parseInt(data.TotalDeaths);\r\n  const totalActive = totalInfected - totalDeaths - totalRecovered;\r\n\r\n  const styles = useStyles();\r\n\r\n  const [topData, setTopData] = useState([]);\r\n  const columns = [\r\n    { id: \"country\", label: \"Country\" },\r\n    { id: \"daily_cases\", label: \"Newly Confirmed\" },\r\n    { id: \"daily_deaths\", label: \"New Deaths\" },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const fetchedData = await fetchTopDaily();\r\n      setTopData(fetchedData);\r\n    }\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const topDailyBar = (\r\n    topData ? (\r\n      <HorizontalBar\r\n        data={{\r\n          labels: topData.map(items => items.country),\r\n          datasets: [\r\n            {\r\n              label: 'New Cases',\r\n              backgroundColor: 'rgba(0,255,127, 0.5)',\r\n              data: topData.map(items => items.daily_cases),\r\n            },\r\n            {\r\n              label: 'Deaths',\r\n              backgroundColor: 'rgba(0, 0, 225, 0.5)',\r\n              data: topData.map(items => items.daily_deaths),\r\n            }\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: true },\r\n          scales: {\r\n            xAxes: [{\r\n              stacked: true,\r\n            }],\r\n            yAxes: [{\r\n              stacked: true\r\n            }]\r\n          }\r\n        }}\r\n      />\r\n    ) : <LinearProgress />\r\n  )\r\n\r\n  if (!totalInfected) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div >\r\n      <Grid container spacing={3} justify='center' borderRadius={16}>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography gutterBottom>Confirmed</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalInfected} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography gutterBottom>Recovered</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalRecovered} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.active)}>\r\n          <CardContent>\r\n            <Typography gutterBottom>Active</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalActive} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography gutterBottom>Deaths</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalDeaths} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n      <Paper elevation={0} className={styles.root}>\r\n        <Typography variant='h5' color='textSecondary' gutterBottom style={{ textAlign: 'center' }}>Top 10 Daily Figures <span role=\"img\" aria-label=\"grinning face\" id=\"rise trend\">📈</span> (Updated live)</Typography>\r\n        <Grid container spacing={3} justify='center'>\r\n          <Grid item>\r\n            <TableContainer className={styles.tables}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map((column) => (\r\n                      <TableCell key={column.id}>{column.label}</TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {topData.map((row) => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.country}\r\n                      >\r\n                        {columns.map((column) => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell key={column.id}>{value}</TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Grid>\r\n          <div className={styles.container}>\r\n            <Grid item>\r\n              {topDailyBar}\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n      </Paper>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default Cards;","import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Typography, Card, Grid, LinearProgress } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { fetchWorldDailyData } from '../../api-handler/index';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    display: 'flexbox',\r\n    textAlign: 'center',\r\n    width: '100%',\r\n    justifyItems: 'center',\r\n    marginLeft: '10%',\r\n  },\r\n  card: {\r\n    float: 'none',\r\n    padding: '2%',\r\n    width: '80%',\r\n    marginTop: '1% !important',\r\n    borderRadius: '12px',\r\n    backgroundColor: 'rgb(0,225,0, 0.1)'\r\n  },\r\n})\r\n\r\nconst Charts = () => {\r\n  const [worldDailyData, setWorldData] = useState([]);\r\n\r\n  const styles = useStyles();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setWorldData(await fetchWorldDailyData());\r\n    }\r\n    fetchData();\r\n  }, [])\r\n\r\n  const worldLineGraph = (\r\n    worldDailyData.length\r\n      ? (<Line\r\n        data={{\r\n          labels: worldDailyData.map(items => new Date(items.last_update).toDateString()),\r\n          datasets: [{\r\n            data: worldDailyData.map(items => items.total_cases),\r\n            label: 'Confirmed',\r\n            borderColor: '#FFA500',\r\n            backgroundColor: 'rgba(255,165,0, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: worldDailyData.map(items => items.total_deaths),\r\n            label: 'Deaths',\r\n            borderColor: '#FF0000',\r\n            backgroundColor: 'rgba(255,0,0, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: worldDailyData.map(items => {\r\n              return items.total_recovered;\r\n            }),\r\n            label: 'Recovered',\r\n            borderColor: '#00FF7F',\r\n            backgroundColor: 'rgba(0,255,127, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: worldDailyData.map(items => {\r\n              return items.total_cases - items.total_deaths - items.total_recovered;\r\n            }),\r\n            label: 'Active',\r\n            borderColor: '#FFFF00',\r\n            backgroundColor: 'rgba(255,255,0, 0.3)',\r\n            fill: 'origin'\r\n          }]\r\n        }}\r\n        options={{\r\n          maintainAspectRatio: true,\r\n          responsive: true,\r\n          scales: {\r\n            xAxes: [{\r\n              ticks: {\r\n                display: true\r\n              }\r\n            }]\r\n          }\r\n        }} />)\r\n      : <LinearProgress />\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <Grid alignItems='center' direction='row'>\r\n          <Grid item component={Card} className={styles.card}>\r\n            <Typography variant='h5' align='center'><span role=\"img\" aria-label=\"world\" id=\"earth\">🌎</span> Trend </Typography>\r\n            {worldLineGraph}\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Charts;","import React from 'react';\r\nimport Cards from './Components/Cards/Cards';\r\nimport Charts from './Components/Charts/Charts';\r\nimport TopBar from './Components/TopBar/TopBar';\r\n\r\nimport { fetchData } from './api-handler/index';\r\n\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    data: {},\r\n    dataDynamic: {},\r\n    date: '',\r\n    country: '',\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n    this.setState({ data: fetchedData.Global });\r\n    this.setState({ date: fetchedData.Date });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { data } = this.state;\r\n    const { date } = this.state;\r\n    const { country } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className='container'>\r\n          <TopBar />\r\n          <Cards data={data} date={date} />\r\n          <Charts country={country} />\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Tables from './Components/Tables/Tables';\r\nimport Singapore from './Components/sgData/Singapore';\r\nimport News from './Components/News/News';\r\nimport App from './App';\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/' component={App} />\r\n      <Route path='/summary' component={Tables} />\r\n      <Route path='/singapore' component={Singapore} />\r\n      <Route path='/news' component={News} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Routes;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nimport Routes from './Route';\r\n\r\nReactDOM.render(\r\n  <HashRouter basename='/covid-dash/'>\r\n    <Routes />\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}