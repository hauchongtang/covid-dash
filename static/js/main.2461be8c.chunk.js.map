{"version":3,"sources":["Components/TopBar/TopBar.jsx","api-handler/index.js","Components/Tables/Tables.jsx","Components/Cards/SGCards.jsx","Components/sgData/Singapore.jsx","Components/News/News.jsx","Components/Cards/Cards.jsx","Components/Charts/Charts.jsx","App.js","Route.js","index.js","Components/sgData/Singapore.module.css","Components/TopBar/TopBar.module.css","Components/News/News.module.css","App.module.css","Components/Charts/Charts.module.css","Components/Cards/Cards.module.css"],"names":["TopBar","className","styles","root","AppBar","position","style","background","Toolbar","variant","Button","href","button","color","Typography","title","fetchData","a","axios","get","response","data","console","log","fetchDailyData","country","variableUrl","url","fetchWorldDailyData","reverse","fetchCurrentData","infected","confirmed","value","recovered","deaths","modifiedData","active","fetchSummaryData","dataSet","countriesData","Countries","fetchTopNews","items","fetchTopDaily","useStyles","makeStyles","width","container","maxHeight","Tables","useState","setData","useEffect","summaryData","fetchAPI","columns","id","label","Paper","Grid","spacing","align","item","component","Card","CardContent","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","map","column","TableCell","key","TableBody","row","hover","role","tabIndex","CountryCode","SGCards","sgData","getAPI","totalInfected","totalRecovered","totalDeaths","totalActive","lastUpdated","Date","toDateString","justify","xs","md","cx","card","gutterBottom","start","end","duration","separator","Singapore","dailyData","setDailyData","currentData","setCurrentData","sgLineGraph","length","labels","datasets","Confirmed","borderColor","backgroundColor","fill","Deaths","Recovered","Active","options","maintainAspectRatio","responsive","sgBarGraph","legend","display","info","alignItems","direction","News","newsData","mapNews","index","gutterBotton","countries","countryCode","name","content","Link","publishedAt","toLocaleString","Cards","date","parseInt","TotalConfirmed","TotalRecovered","TotalDeaths","topData","setTopData","fetchedData","elevation","daily_cases","daily_deaths","Charts","worldDailyData","setWorldData","worldLineGraph","last_update","total_cases","total_deaths","total_recovered","App","state","dataDynamic","this","setState","Global","React","Component","Routes","exact","path","ReactDOM","render","basename","Route","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2461be8c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { AppBar, Toolbar, Typography, Button } from '@material-ui/core'\r\n\r\nimport styles from './TopBar.module.css';\r\n\r\nconst TopBar = () => {\r\n  return (\r\n    <div className={styles.root}>\r\n      <AppBar position=\"static\" style={{ background: '#639ACE' }}>\r\n        <Toolbar variant='dense'>\r\n          <Button href='#/' className={styles.button} color=\"inherit\">\r\n            <Typography variant=\"h6\" className={styles.title}>\r\n              COVID-19-DASH\r\n            </Typography>\r\n          </Button>\r\n          <Button href=' #/' color='inherit'>\r\n            World\r\n          </Button>\r\n          <Button href='#/singapore' color='inherit'>\r\n            Singapore\r\n          </Button>\r\n          <Button href='#/summary' color='inherit'>\r\n            Summary\r\n          </Button>\r\n          <Button href='#/news' color='inherit'>\r\n            News\r\n          </Button>\r\n          <Button href='https://github.com/thchong-code/covid-dash' color='inherit'>\r\n            Github\r\n          </Button>\r\n          <Button href='https://thchong-code.github.io/portfolio-webpage/#/' color='inherit'>\r\n            Contact\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TopBar;","import axios from 'axios';\r\n\r\nexport const fetchData = async () => {\r\n  try {\r\n    const url = 'https://api.covid19api.com/summary';\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async (country) => {\r\n  const url = 'https://api.covid19api.com/total/country';\r\n  var variableUrl = url;\r\n  if (country) {\r\n    variableUrl = `${url}/${country}`;\r\n  }\r\n  if (!country) {\r\n    variableUrl = `${url}/singapore`;\r\n  }\r\n  try {\r\n    const response = await axios.get(variableUrl);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchWorldDailyData = async () => {\r\n  try {\r\n    const url = 'https://covid19-api.org/api/timeline';\r\n    const response = await axios.get(url);\r\n    return response.data.reverse();\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const countries = async () => {\r\n  try {\r\n    const url = 'https://covid19.mathdro.id/api/countries';\r\n    const response = await axios.get(url);\r\n    return response.data.countries;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchCurrentData = async () => {\r\n  try {\r\n    const url = 'https://covid19.mathdro.id/api/countries/Singapore';\r\n    const response = await axios.get(url);\r\n    const infected = response.data.confirmed.value;\r\n    const recovered = response.data.recovered.value;\r\n    const deaths = response.data.deaths.value;\r\n    const active = infected - deaths - recovered;\r\n    const modifiedData = { infected, recovered, active, deaths };\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchSummaryData = async () => {\r\n  try {\r\n    const url = 'https://api.covid19api.com/summary';\r\n    const response = await axios.get(url);\r\n    const dataSet = response.data;\r\n    const countriesData = dataSet.Countries;\r\n    return countriesData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchTopNews = async () => {\r\n  try {\r\n    const url = 'https://api.coronatracker.com/news/trending';\r\n    const response = await axios.get(url);\r\n    const dataSet = response.data.items;\r\n    return dataSet;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchTopDaily = async () => {\r\n  try {\r\n    const url = 'https://api.coronatracker.com/v3/analytics/dailyNewStats?limit=10';\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\n\r\nimport TopBar from \"../TopBar/TopBar\";\r\nimport { fetchSummaryData } from \"../../api-handler/index\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    maxHeight: 530,\r\n  },\r\n});\r\n\r\nconst Tables = () => {\r\n  const styles = useStyles();\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const summaryData = await fetchSummaryData();\r\n      setData(summaryData);\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const columns = [\r\n    { id: \"Country\", label: \"Country\" },\r\n    { id: \"NewConfirmed\", label: \"Newly Confirmed\" },\r\n    { id: \"NewDeaths\", label: \"New Deaths\" },\r\n    { id: \"NewRecovered\", label: \"Newly Recovered\" },\r\n    { id: \"TotalConfirmed\", label: \"Confirmed\" },\r\n    { id: \"TotalDeaths\", label: \"Deaths\" },\r\n    { id: \"TotalRecovered\", label: \"Recovered\" },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <Paper className={styles.root}>\r\n        <Grid spacing={3} align=\"center\">\r\n          <Grid item component={Card}>\r\n            <CardContent>\r\n              <TableContainer className={styles.container}>\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {columns.map((column) => (\r\n                        <TableCell key={column.id}>{column.label}</TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {data.map((row) => {\r\n                      return (\r\n                        <TableRow\r\n                          hover\r\n                          role=\"checkbox\"\r\n                          tabIndex={-1}\r\n                          key={row.CountryCode}\r\n                        >\r\n                          {columns.map((column) => {\r\n                            const value = row[column.id];\r\n                            return (\r\n                              <TableCell key={column.id}>{value}</TableCell>\r\n                            );\r\n                          })}\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                  <caption>Courtesy of https://api.covid19api.com</caption>\r\n                </Table>\r\n              </TableContainer>\r\n            </CardContent>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tables;\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Grid, Card, CardContent, Typography } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\nimport { fetchCurrentData } from '../../api-handler';\r\n\r\nconst SGCards = () => {\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    const getAPI = async () => {\r\n      const sgData = await fetchCurrentData();\r\n      setData(sgData);\r\n    }\r\n    getAPI()\r\n  }, []);\r\n  const totalInfected = data.infected;\r\n  const totalRecovered = data.recovered;\r\n  const totalDeaths = data.deaths;\r\n  const totalActive = data.active;\r\n  const lastUpdated = new Date().toDateString();\r\n\r\n  if (!totalInfected) {\r\n    return 'Loading...';\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify='center'>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography color='textSecondary' gutterBottom>Confirmed</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalInfected} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n            <Typography color='textSecondary'>{lastUpdated}</Typography>\r\n            <Typography variant='body2'>Number of infections</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.active)}>\r\n          <CardContent>\r\n            <Typography color='textSecondary' gutterBottom>Active</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalActive} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n            <Typography color='textSecondary'>{lastUpdated}</Typography>\r\n            <Typography variant='body2'>Number of active cases</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color='textSecondary' gutterBottom>Recovered</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalRecovered} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n            <Typography color='textSecondary'>{lastUpdated}</Typography>\r\n            <Typography variant='body2'>Number of recoveries</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color='textSecondary' gutterBottom>Deaths</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalDeaths} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n            <Typography color='textSecondary'>{lastUpdated}</Typography>\r\n            <Typography variant='body2'>Number of fatalities</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SGCards;","import React, { useState, useEffect } from 'react';\r\nimport { Line, HorizontalBar } from 'react-chartjs-2';\r\nimport { Typography, CardContent, Card, Grid } from '@material-ui/core';\r\nimport { fetchDailyData, fetchCurrentData } from '../../api-handler/index';\r\n\r\nimport TopBar from '../TopBar/TopBar';\r\nimport SGCards from '../Cards/SGCards';\r\n\r\nimport styles from './Singapore.module.css';\r\n\r\nconst Singapore = () => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n  const [currentData, setCurrentData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setDailyData(await fetchDailyData());\r\n      setCurrentData(await fetchCurrentData());\r\n    }\r\n    fetchData();\r\n  }, [])\r\n\r\n  const sgLineGraph = (\r\n    dailyData.length\r\n      ? (<Line\r\n        data={{\r\n          labels: dailyData.map(items => new Date(items.Date).toDateString()),\r\n          datasets: [{\r\n            data: dailyData.map(items => items.Confirmed),\r\n            label: 'Confirmed',\r\n            borderColor: '#FFA500',\r\n            backgroundColor: 'rgba(255,165,0, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: dailyData.map(items => items.Deaths),\r\n            label: 'Deaths',\r\n            borderColor: '#FF0000',\r\n            backgroundColor: 'rgba(255,0,0, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: dailyData.map(items => items.Recovered),\r\n            label: 'Recovered',\r\n            borderColor: '#00FF7F',\r\n            backgroundColor: 'rgba(0,255,127, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: dailyData.map(items => items.Active),\r\n            label: 'Active',\r\n            borderColor: '#FFFF00',\r\n            backgroundColor: 'rgba(255,255,0, 0.3)',\r\n            fill: 'origin'\r\n          }]\r\n        }}\r\n        options={{\r\n          maintainAspectRatio: true,\r\n          responsive: true\r\n        }} />)\r\n      : null\r\n  )\r\n\r\n  const sgBarGraph = (\r\n    currentData ? (\r\n      <HorizontalBar\r\n        data={{\r\n          labels: ['Confirmed', 'Recovered', 'Active', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(255,165,0, 0.5)', 'rgba(0,255,127, 0.5)', 'rgba(255,255,0, 0.5)', 'rgba(255, 0, 0, 0.3)'],\r\n              data: [currentData.infected, currentData.recovered, currentData.active, currentData.deaths],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false }\r\n        }}\r\n      />\r\n    ) : null\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <div className={styles.info}>\r\n        <SGCards />\r\n      </div>\r\n      <div className={styles.container}>\r\n        <Grid alignItems='center' direction='row'>\r\n          <Grid item component={Card} className={styles.card}>\r\n            <CardContent>\r\n              <Typography variant='h5' align='center'>Singapore Trends 🇸🇬</Typography>\r\n              {sgLineGraph}\r\n            </CardContent>\r\n          </Grid>\r\n          <Grid item component={Card} className={styles.card}>\r\n            <CardContent>\r\n              <Typography variant='h5' align='center'>Singapore Summary 🇸🇬</Typography>\r\n              {sgBarGraph}\r\n            </CardContent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Singapore;","import React, { useState, useEffect } from 'react';\r\nimport { Grid, Card, CardContent, Typography, Link } from '@material-ui/core';\r\nimport { countries } from 'country-data';\r\n\r\nimport TopBar from '../TopBar/TopBar';\r\nimport { fetchTopNews } from '../../api-handler/index';\r\n\r\nimport styles from './News.module.css';\r\n\r\nconst News = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const newsData = await fetchTopNews();\r\n      setData(newsData);\r\n    }\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const mapNews = data.map((items, index) => {\r\n    return (\r\n      <div className={styles.container}>\r\n        <CardContent className={styles.card}>\r\n          <Typography variant='h6' color='textPrimary' gutterBotton>{countries[items.countryCode].name}</Typography>\r\n          <Typography variant='h6' color='primary' gutterBottom>{items.title}</Typography>\r\n          <Typography variant='body2'>{items.content}</Typography>\r\n          <Typography variant='caption'>\r\n            Source:&nbsp;\r\n            <Link href={items.url}>{items.url}</Link>\r\n          </Typography>\r\n          <Typography variant='body2'>Published:&nbsp;{new Date(items.publishedAt).toLocaleString()}</Typography>\r\n        </CardContent>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <div className={styles.container}>\r\n        <Grid spacing={3} align='center'>\r\n          <Grid item component={Card}>\r\n            {mapNews}\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default News;","import React, { useState, useEffect } from 'react';\r\nimport { Grid, Card, CardContent, Typography, Paper } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport { fetchTopDaily } from '../../api-handler/index';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({ data, date }) => {\r\n  const totalInfected = parseInt(data.TotalConfirmed);\r\n  const totalRecovered = parseInt(data.TotalRecovered);\r\n  const totalDeaths = parseInt(data.TotalDeaths);\r\n  const totalActive = totalInfected - totalDeaths - totalRecovered;\r\n  const lastUpdated = new Date(date).toDateString();\r\n\r\n  const [topData, setTopData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const fetchedData = await fetchTopDaily();\r\n      setTopData(fetchedData);\r\n    }\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  if (!totalInfected) {\r\n    return 'Loading...';\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify='center'>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography color='textSecondary' gutterBottom>Confirmed</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalInfected} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n            <Typography color='textSecondary'>{lastUpdated}</Typography>\r\n            <Typography variant='body2'>Number of infections</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.active)}>\r\n          <CardContent>\r\n            <Typography color='textSecondary' gutterBottom>Active</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalActive} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n            <Typography color='textSecondary'>{lastUpdated}</Typography>\r\n            <Typography variant='body2'>Number of active cases</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color='textSecondary' gutterBottom>Recovered</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalRecovered} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n            <Typography color='textSecondary'>{lastUpdated}</Typography>\r\n            <Typography variant='body2'>Number of recoveries</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color='textSecondary' gutterBottom>Deaths</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalDeaths} duration={2.5} separator=\",\" />\r\n            </Typography>\r\n            <Typography color='textSecondary'>{lastUpdated}</Typography>\r\n            <Typography variant='body2'>Number of fatalities</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n      <Paper elevation={1} className={styles.root}>\r\n        <Typography variant='h5' color='textSecondary' gutterBottom>Top 10 Daily Figures 📈 (Updated live)</Typography>\r\n        {topData.map((item, index) => {\r\n          return (\r\n            <>\r\n              <Typography variant='h6'>{index + 1}.&nbsp;{item.country}</Typography>\r\n              <Typography color='primary'>Cases:&nbsp;{item.daily_cases}&nbsp;Deaths:&nbsp;{item.daily_deaths}</Typography>\r\n            </>\r\n          )\r\n        })}\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cards;","import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Typography, Card, Grid } from '@material-ui/core';\r\nimport { fetchWorldDailyData } from '../../api-handler/index';\r\n\r\nimport styles from './Charts.module.css';\r\n\r\nconst Charts = () => {\r\n  const [worldDailyData, setWorldData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setWorldData(await fetchWorldDailyData());\r\n    }\r\n    fetchData();\r\n  }, [])\r\n\r\n  const worldLineGraph = (\r\n    worldDailyData.length\r\n      ? (<Line\r\n        data={{\r\n          labels: worldDailyData.map(items => new Date(items.last_update).toDateString()),\r\n          datasets: [{\r\n            data: worldDailyData.map(items => items.total_cases),\r\n            label: 'Confirmed',\r\n            borderColor: '#FFA500',\r\n            backgroundColor: 'rgba(255,165,0, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: worldDailyData.map(items => items.total_deaths),\r\n            label: 'Deaths',\r\n            borderColor: '#FF0000',\r\n            backgroundColor: 'rgba(255,0,0, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: worldDailyData.map(items => {\r\n              return items.total_recovered;\r\n            }),\r\n            label: 'Recovered',\r\n            borderColor: '#00FF7F',\r\n            backgroundColor: 'rgba(0,255,127, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: worldDailyData.map(items => {\r\n              return items.total_cases - items.total_deaths - items.total_recovered;\r\n            }),\r\n            label: 'Active',\r\n            borderColor: '#FFFF00',\r\n            backgroundColor: 'rgba(255,255,0, 0.3)',\r\n            fill: 'origin'\r\n          }]\r\n        }}\r\n        options={{\r\n          maintainAspectRatio: true,\r\n          responsive: true\r\n        }} />)\r\n      : null\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <Grid alignItems='center' direction='row'>\r\n          <Grid item component={Card} className={styles.card}>\r\n            <Typography variant='h5' align='center'>World Trend 🌎</Typography>\r\n            {worldLineGraph}\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Charts;","import React from 'react';\r\n\r\nimport styles from './App.module.css';\r\nimport Cards from './Components/Cards/Cards';\r\nimport Charts from './Components/Charts/Charts';\r\nimport TopBar from './Components/TopBar/TopBar';\r\n\r\nimport { fetchData } from './api-handler/index';\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    data: {},\r\n    dataDynamic: {},\r\n    date: '',\r\n    country: '',\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n    this.setState({ data: fetchedData.Global });\r\n    this.setState({ date: fetchedData.Date });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { data } = this.state;\r\n    const { date } = this.state;\r\n    const { country } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <TopBar />\r\n        <div className={styles.container}>\r\n          <Cards data={data} date={date} />\r\n        </div>\r\n        <div className={styles.container}>\r\n          <Charts country={country} />\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Tables from './Components/Tables/Tables';\r\nimport Singapore from './Components/sgData/Singapore';\r\nimport News from './Components/News/News';\r\nimport App from './App';\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/' component={App} />\r\n      <Route path='/summary' component={Tables} />\r\n      <Route path='/singapore' component={Singapore} />\r\n      <Route path='/news' component={News} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Routes;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nimport Routes from './Route';\r\n\r\nReactDOM.render(\r\n  <HashRouter basename='/covid-dash/'>\r\n    <Routes />\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Singapore_container__Oh8jz\",\"card\":\"Singapore_card__34Cne\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"TopBar_button__2P3xO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"News_container__kptau\",\"card\":\"News_card__2V8V5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3Cyev\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__1Y8uv\",\"card\":\"Charts_card__1_Yrv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2alDK\",\"card\":\"Cards_card__2yU1P\",\"root\":\"Cards_root__2b9sO\",\"topcard\":\"Cards_topcard__3hHXH\",\"infected\":\"Cards_infected__1EFcA\",\"active\":\"Cards_active__TD9Xv\",\"recovered\":\"Cards_recovered__947st\",\"deaths\":\"Cards_deaths__2I0Ix\"};"],"sourceRoot":""}