{"version":3,"sources":["Components/TopBar/TopBar.jsx","api-handler/index.js","Components/Tables/Tables.jsx","Components/Cards/SGCards.jsx","Components/sgData/Singapore.jsx","Components/News/News.jsx","Components/Cards/Cards.jsx","Components/Charts/Charts.jsx","App.js","Route.js","index.js","Components/Tables/Tables.module.css","Components/sgData/Singapore.module.css","Components/TopBar/TopBar.module.css","Components/News/News.module.css","App.module.css","Components/Charts/Charts.module.css","Components/Cards/Cards.module.css"],"names":["TopBar","className","styles","root","AppBar","position","style","background","Toolbar","variant","Button","href","button","color","Typography","title","fetchData","a","axios","get","response","data","console","log","fetchDailyData","country","variableUrl","url","fetchWorldDailyData","fetchCurrentData","infected","confirmed","value","recovered","deaths","modifiedData","active","fetchSummaryData","dataSet","countriesData","Countries","fetchTopNews","items","Tables","useState","setData","useEffect","summaryData","fetchAPI","summaryTableBody","map","item","index","TableRow","key","TableCell","Country","NewConfirmed","NewDeaths","NewRecovered","TotalConfirmed","TotalDeaths","TotalRecovered","container","Paper","Grid","spacing","align","component","Card","CardContent","TableContainer","Table","stickyHeader","aria-label","TableHead","head","hover","role","tabIndex","TableBody","SGCards","sgData","getAPI","totalInfected","totalRecovered","totalDeaths","totalActive","lastUpdated","Date","toDateString","justify","xs","md","cx","card","gutterBottom","start","end","duration","seperator","Singapore","dailyData","setDailyData","currentData","setCurrentData","sgLineGraph","length","labels","datasets","Confirmed","label","borderColor","backgroundColor","fill","Deaths","Recovered","Active","options","maintainAspectRatio","responsive","sgBarGraph","legend","display","info","alignItems","direction","News","newsData","mapNews","gutterBotton","countries","countryCode","name","content","Link","publishedAt","toLocaleString","Cards","date","Charts","worldDailyData","setWorldData","worldLineGraph","reportDate","totalConfirmed","total","App","state","dataDynamic","fetchedData","this","setState","Global","React","Component","Routes","exact","path","ReactDOM","render","basename","Route","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1fac3b13.chunk.js","sourcesContent":["import React from 'react';\r\nimport { AppBar, Toolbar, Typography, Button } from '@material-ui/core'\r\n\r\nimport styles from './TopBar.module.css';\r\n\r\nconst TopBar = () => {\r\n  return (\r\n    <div className={styles.root}>\r\n      <AppBar position=\"static\" style={{ background: '#639ACE' }}>\r\n        <Toolbar variant='dense'>\r\n          <Button href='#/' className={styles.button} color=\"inherit\">\r\n            <Typography variant=\"h6\" className={styles.title}>\r\n              COVID-19-DASH\r\n            </Typography>\r\n          </Button>\r\n          <Button href=' #/' color='inherit'>\r\n            World\r\n          </Button>\r\n          <Button href='#/singapore' color='inherit'>\r\n            Singapore\r\n          </Button>\r\n          <Button href='#/summary' color='inherit'>\r\n            Summary\r\n          </Button>\r\n          <Button href='#/news' color='inherit'>\r\n            News\r\n          </Button>\r\n          <Button href='https://github.com/thchong-code/covid-dash' color='inherit'>\r\n            Github\r\n          </Button>\r\n          <Button href='https://thchong-code.github.io/portfolio-webpage/#/' color='inherit'>\r\n            My Website\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TopBar;","import axios from 'axios';\r\n\r\nexport const fetchData = async () => {\r\n  try {\r\n    const url = 'https://api.covid19api.com/summary';\r\n    const response = await axios.get(url);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async (country) => {\r\n  const url = 'https://api.covid19api.com/total/country';\r\n  var variableUrl = url;\r\n  if (country) {\r\n    variableUrl = `${url}/${country}`;\r\n  }\r\n  if (!country) {\r\n    variableUrl = `${url}/singapore`;\r\n  }\r\n  try {\r\n    const response = await axios.get(variableUrl);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchWorldDailyData = async () => {\r\n  try {\r\n    const url = 'https://covid19.mathdro.id/api/daily';\r\n    const response = await axios.get(url)\r\n    return response.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const countries = async () => {\r\n  try {\r\n    const url = 'https://covid19.mathdro.id/api/countries';\r\n    const response = await axios.get(url);\r\n    return response.data.countries;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchCurrentData = async () => {\r\n  try {\r\n    const url = 'https://covid19.mathdro.id/api/countries/Singapore';\r\n    const response = await axios.get(url);\r\n    const infected = response.data.confirmed.value;\r\n    const recovered = response.data.recovered.value;\r\n    const deaths = response.data.deaths.value;\r\n    const active = infected - deaths - recovered;\r\n    const modifiedData = { infected, recovered, active, deaths };\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchSummaryData = async () => {\r\n  try {\r\n    const url = 'https://api.covid19api.com/summary';\r\n    const response = await axios.get(url);\r\n    const dataSet = response.data;\r\n    const countriesData = dataSet.Countries;\r\n    return countriesData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport const fetchTopNews = async () => {\r\n  try {\r\n    const url = 'https://api.coronatracker.com/news/trending';\r\n    const response = await axios.get(url);\r\n    const dataSet = response.data.items;\r\n    return dataSet;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Paper\r\n} from '@material-ui/core';\r\n\r\nimport TopBar from '../TopBar/TopBar';\r\nimport { fetchSummaryData } from '../../api-handler/index';\r\n\r\nimport styles from './Tables.module.css';\r\n\r\nconst Tables = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const summaryData = await fetchSummaryData();\r\n      setData(summaryData);\r\n      console.log(summaryData)\r\n    }\r\n    fetchAPI();\r\n  }, [])\r\n\r\n  const summaryTableBody = data.map((item, index) => {\r\n    return (\r\n      <TableRow key={index}>\r\n        <TableCell>{item.Country}</TableCell>\r\n        <TableCell>{item.NewConfirmed}</TableCell>\r\n        <TableCell>{item.NewDeaths}</TableCell>\r\n        <TableCell>{item.NewRecovered}</TableCell>\r\n        <TableCell>{item.TotalConfirmed}</TableCell>\r\n        <TableCell>{item.TotalDeaths}</TableCell>\r\n        <TableCell>{item.TotalRecovered}</TableCell>\r\n      </TableRow>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <div className={styles.container}>\r\n        <Paper className={styles.container}>\r\n          <Grid spacing={3} align='center'>\r\n            <Grid item component={Card} className={styles.container}>\r\n              <CardContent className={styles.container}>\r\n                <TableContainer className={styles.container}>\r\n                  <Table stickyHeader={true} aria-label=\"sticky table\" className={styles.container}>\r\n                    <TableHead className={styles.head}>\r\n                      <TableRow hover role=\"checkbox\" tabIndex={-1}>\r\n                        <TableCell key={1}>{'Country'}</TableCell>\r\n                        <TableCell key={2}>{'Newly Confirmed'}</TableCell>\r\n                        <TableCell key={3}>{'New Deaths'}</TableCell>\r\n                        <TableCell key={4}>{'Newly Recovered'}</TableCell>\r\n                        <TableCell key={5}>{'Confirmed'}</TableCell>\r\n                        <TableCell key={6}>{'Deaths'}</TableCell>\r\n                        <TableCell key={7}>{'Recovered'}</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {summaryTableBody}\r\n                    </TableBody>\r\n                    <caption>Courtesy of https://api.covid19api.com</caption>\r\n                  </Table>\r\n                </TableContainer>\r\n              </CardContent>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tables;","import React, { useEffect, useState } from 'react'\r\nimport { Grid, Card, CardContent, Typography } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\nimport { fetchCurrentData } from '../../api-handler';\r\n\r\nconst SGCards = () => {\r\n  const [data, setData] = useState([]);\r\n  useEffect(() => {\r\n    const getAPI = async () => {\r\n      const sgData = await fetchCurrentData();\r\n      setData(sgData);\r\n    }\r\n    getAPI()\r\n  }, []);\r\n  const totalInfected = data.infected;\r\n  const totalRecovered = data.recovered;\r\n  const totalDeaths = data.deaths;\r\n  const totalActive = data.active;\r\n  const lastUpdated = new Date().toDateString();\r\n\r\n  if (!totalInfected) {\r\n    return 'Loading...';\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify='center'>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography color='textSecondary' gutterBottom>Confirmed</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalInfected} duration={2.5} seperator=\",\" />\r\n            </Typography>\r\n            <Typography color='textSecondary'>{lastUpdated}</Typography>\r\n            <Typography variant='body2'>Number of infections</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.active)}>\r\n          <CardContent>\r\n            <Typography color='textSecondary' gutterBottom>Active</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalActive} duration={2.5} seperator=\",\" />\r\n            </Typography>\r\n            <Typography color='textSecondary'>{lastUpdated}</Typography>\r\n            <Typography variant='body2'>Number of active cases</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color='textSecondary' gutterBottom>Recovered</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalRecovered} duration={2.5} seperator=\",\" />\r\n            </Typography>\r\n            <Typography color='textSecondary'>{lastUpdated}</Typography>\r\n            <Typography variant='body2'>Number of recoveries</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color='textSecondary' gutterBottom>Deaths</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalDeaths} duration={2.5} seperator=\",\" />\r\n            </Typography>\r\n            <Typography color='textSecondary'>{lastUpdated}</Typography>\r\n            <Typography variant='body2'>Number of fatalities</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SGCards;","import React, { useState, useEffect } from 'react';\r\nimport { Line, HorizontalBar } from 'react-chartjs-2';\r\nimport { Typography, CardContent, Card, Grid } from '@material-ui/core';\r\nimport { fetchDailyData, fetchCurrentData } from '../../api-handler/index';\r\n\r\nimport TopBar from '../TopBar/TopBar';\r\nimport SGCards from '../Cards/SGCards';\r\n\r\nimport styles from './Singapore.module.css';\r\n\r\nconst Singapore = () => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n  const [currentData, setCurrentData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setDailyData(await fetchDailyData());\r\n      setCurrentData(await fetchCurrentData());\r\n    }\r\n    fetchData();\r\n  }, [])\r\n\r\n  const sgLineGraph = (\r\n    dailyData.length\r\n      ? (<Line\r\n        data={{\r\n          labels: dailyData.map(items => new Date(items.Date).toDateString()),\r\n          datasets: [{\r\n            data: dailyData.map(items => items.Confirmed),\r\n            label: 'Confirmed',\r\n            borderColor: '#FFA500',\r\n            backgroundColor: 'rgba(255,165,0, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: dailyData.map(items => items.Deaths),\r\n            label: 'Deaths',\r\n            borderColor: '#FF0000',\r\n            backgroundColor: 'rgba(255,0,0, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: dailyData.map(items => items.Recovered),\r\n            label: 'Recovered',\r\n            borderColor: '#00FF7F',\r\n            backgroundColor: 'rgba(0,255,127, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: dailyData.map(items => items.Active),\r\n            label: 'Active',\r\n            borderColor: '#FFFF00',\r\n            backgroundColor: 'rgba(255,255,0, 0.3)',\r\n            fill: 'origin'\r\n          }]\r\n        }}\r\n        options={{\r\n          maintainAspectRatio: true,\r\n          responsive: true\r\n        }} />)\r\n      : null\r\n  )\r\n\r\n  const sgBarGraph = (\r\n    currentData ? (\r\n      <HorizontalBar\r\n        data={{\r\n          labels: ['Confirmed', 'Recovered', 'Active', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(255,165,0, 0.5)', 'rgba(0,255,127, 0.5)', 'rgba(255,255,0, 0.5)', 'rgba(255, 0, 0, 0.3)'],\r\n              data: [currentData.infected, currentData.recovered, currentData.active, currentData.deaths],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false }\r\n        }}\r\n      />\r\n    ) : null\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <div className={styles.info}>\r\n        <SGCards />\r\n      </div>\r\n      <div className={styles.container}>\r\n        <Grid alignItems='center' direction='row'>\r\n          <Grid item component={Card} className={styles.card}>\r\n            <CardContent>\r\n              <Typography variant='h5' align='center'>Singapore Trends 🇸🇬</Typography>\r\n              {sgLineGraph}\r\n            </CardContent>\r\n          </Grid>\r\n          <Grid item component={Card} className={styles.card}>\r\n            <CardContent>\r\n              <Typography variant='h5' align='center'>Singapore Summary 🇸🇬</Typography>\r\n              {sgBarGraph}\r\n            </CardContent>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Singapore;","import React, { useState, useEffect } from 'react';\r\nimport { Grid, Card, CardContent, Typography, Link } from '@material-ui/core';\r\nimport { countries } from 'country-data';\r\n\r\nimport TopBar from '../TopBar/TopBar';\r\nimport { fetchTopNews } from '../../api-handler/index';\r\n\r\nimport styles from './News.module.css';\r\n\r\nconst News = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      const newsData = await fetchTopNews();\r\n      setData(newsData);\r\n    }\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const mapNews = data.map((items, index) => {\r\n    return (\r\n      <div className={styles.container}>\r\n        <CardContent className={styles.card}>\r\n          <Typography variant='h6' color='textPrimary' gutterBotton>{countries[items.countryCode].name}</Typography>\r\n          <Typography variant='h6' color='primary' gutterBottom>{items.title}</Typography>\r\n          <Typography variant='body2'>{items.content}</Typography>\r\n          <Typography variant='caption'>\r\n            Source:&nbsp;\r\n            <Link href={items.url}>{items.url}</Link>\r\n          </Typography>\r\n          <Typography variant='body2'>Published:&nbsp;{new Date(items.publishedAt).toLocaleString()}</Typography>\r\n        </CardContent>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <div className={styles.container}>\r\n        <Grid spacing={3} align='center'>\r\n          <Grid item component={Card}>\r\n            {mapNews}\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default News;","import React from 'react'\r\nimport { Grid, Card, CardContent, Typography } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({ data, date }) => {\r\n  const totalInfected = data.TotalConfirmed;\r\n  const totalRecovered = data.TotalRecovered;\r\n  const totalDeaths = data.TotalDeaths;\r\n  const totalActive = totalInfected - totalDeaths - totalRecovered;\r\n  const lastUpdated = new Date(date).toDateString();\r\n\r\n  if (!totalInfected) {\r\n    return 'Loading...';\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify='center'>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.infected)}>\r\n          <CardContent>\r\n            <Typography color='textSecondary' gutterBottom>Confirmed</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalInfected} duration={2.5} seperator=\",\" />\r\n            </Typography>\r\n            <Typography color='textSecondary'>{lastUpdated}</Typography>\r\n            <Typography variant='body2'>Number of infections</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.active)}>\r\n          <CardContent>\r\n            <Typography color='textSecondary' gutterBottom>Active</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalActive} duration={2.5} seperator=\",\" />\r\n            </Typography>\r\n            <Typography color='textSecondary'>{lastUpdated}</Typography>\r\n            <Typography variant='body2'>Number of active cases</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color='textSecondary' gutterBottom>Recovered</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalRecovered} duration={2.5} seperator=\",\" />\r\n            </Typography>\r\n            <Typography color='textSecondary'>{lastUpdated}</Typography>\r\n            <Typography variant='body2'>Number of recoveries</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs={12} md={2} className={cx(styles.card, styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color='textSecondary' gutterBottom>Deaths</Typography>\r\n            <Typography variant='h5'>\r\n              <CountUp start={0} end={totalDeaths} duration={2.5} seperator=\",\" />\r\n            </Typography>\r\n            <Typography color='textSecondary'>{lastUpdated}</Typography>\r\n            <Typography variant='body2'>Number of fatalities</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cards;","import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Typography, CardContent, Card, Grid } from '@material-ui/core';\r\nimport { fetchWorldDailyData } from '../../api-handler/index';\r\n\r\nimport styles from './Charts.module.css';\r\n\r\nconst Charts = () => {\r\n  const [worldDailyData, setWorldData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setWorldData(await fetchWorldDailyData());\r\n    }\r\n    fetchData();\r\n  }, [])\r\n\r\n  const worldLineGraph = (\r\n    worldDailyData.length\r\n      ? (<Line\r\n        data={{\r\n          labels: worldDailyData.map(items => new Date(items.reportDate).toDateString()),\r\n          datasets: [{\r\n            data: worldDailyData.map(items => items.totalConfirmed),\r\n            label: 'Confirmed',\r\n            borderColor: '#FFA500',\r\n            backgroundColor: 'rgba(255,165,0, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: worldDailyData.map(items => items.deaths.total),\r\n            label: 'Deaths',\r\n            borderColor: '#FF0000',\r\n            backgroundColor: 'rgba(255,0,0, 0.3)',\r\n            fill: 'origin'\r\n          }, {\r\n            data: worldDailyData.map(items => {\r\n              return items.totalConfirmed - items.deaths.total;\r\n            }),\r\n            label: 'Active / Recovered',\r\n            borderColor: '#8A2BE2',\r\n            backgroundColor: 'rgba(138,43,226, 0.3)',\r\n            fill: 'origin'\r\n          }]\r\n        }}\r\n        options={{\r\n          maintainAspectRatio: true,\r\n          responsive: true\r\n        }} />)\r\n      : null\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <Grid alignItems='center' direction='row'>\r\n          <Grid item component={Card} className={styles.card}>\r\n            <Typography variant='h5' align='center'>World Trends 🌎</Typography>\r\n            {worldLineGraph}\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Charts;","import React from 'react';\n\nimport styles from './App.module.css';\nimport Cards from './Components/Cards/Cards';\nimport Charts from './Components/Charts/Charts';\nimport TopBar from './Components/TopBar/TopBar';\n\nimport { fetchData } from './api-handler/index';\n\nclass App extends React.Component {\n\n  state = {\n    data: {},\n    dataDynamic: {},\n    date: '',\n    country: '',\n  }\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData.Global });\n    this.setState({ date: fetchedData.Date });\n  }\n\n  render() {\n\n    const { data } = this.state;\n    const { date } = this.state;\n    const { country } = this.state;\n\n    return (\n      <>\n        <TopBar />\n        <div className={styles.container}>\n          <Cards data={data} date={date} />\n        </div>\n        <div className={styles.container}>\n          <Charts country={country} />\n        </div>\n      </>\n    )\n  }\n};\n\nexport default App;\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport Tables from './Components/Tables/Tables';\r\nimport Singapore from './Components/sgData/Singapore';\r\nimport News from './Components/News/News';\r\nimport App from './App';\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/' component={App} />\r\n      <Route path='/summary' component={Tables} />\r\n      <Route path='/singapore' component={Singapore} />\r\n      <Route path='/news' component={News} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Routes;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nimport Routes from './Route';\r\n\r\nReactDOM.render(\r\n  <HashRouter basename='/covid-dash/'>\r\n    <Routes />\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Tables_container__1ZZll\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Singapore_container__Oh8jz\",\"card\":\"Singapore_card__34Cne\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"TopBar_button__2P3xO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"News_container__kptau\",\"card\":\"News_card__2V8V5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3Cyev\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__1Y8uv\",\"card\":\"Charts_card__1_Yrv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2alDK\",\"card\":\"Cards_card__2yU1P\",\"infected\":\"Cards_infected__1EFcA\",\"active\":\"Cards_active__TD9Xv\",\"recovered\":\"Cards_recovered__947st\",\"deaths\":\"Cards_deaths__2I0Ix\"};"],"sourceRoot":""}